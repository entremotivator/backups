{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-06T13:24:54.706Z",
  "id": "diM8NWL0cv7fStHZ",
  "meta": null,
  "name": "n8n Backup",
  "nodes": [
    {
      "parameters": {},
      "id": "60b78af0-abcf-4ee5-bfa2-81be068d5ad3",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1620,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "7630b8bd-6fdb-4db9-a18c-37240aacc614",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        -780,
        260
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "atOnoD7TfdYsT5IR",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "364d1955-1bf4-46a8-90b1-1e04ac6d86a0",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "11178b8f-b55c-4e77-b06a-c5595ad2fb4a",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b50617ed-427e-41ee-a938-c6de294c9780",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        100,
        580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "2bee7da2-8040-46d5-a297-d5e10578ecb6",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        280,
        400
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "atOnoD7TfdYsT5IR",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
          "mode": "name"
        },
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "4d7d7944-c123-451d-9236-f1a92af86e11",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        280,
        580
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "atOnoD7TfdYsT5IR",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "11d4bf0b-29d5-47d8-a4e9-b569f456839f",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -1000,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "ITZUMA"
            },
            {
              "name": "repo.name",
              "value": "n8n-backup"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "18d3dad1-90c6-4181-8077-1ea1f50012f3",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -1440,
        420
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "0da87eb2-61ea-429a-b09c-399ef3a0183d",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -1620,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - weilinchangllc\nrepo.name - n8n-backup\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "47258686-d891-4415-8e54-2d80f43185f7",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2080,
        200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "207e51cc-3983-40de-b6a3-99ecc7eadb6b",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1020,
        140
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "d2dce568-b730-4a93-8202-ea6310c498ab",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "06fd3d20-7187-44d6-ac4a-0cd90f57bfa8",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -1240,
        420
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "O4RjnpLuZJqhvyun",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "7f8ec81e-d4b6-4f75-b9ae-d73ea9b9e3b1",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -380,
        400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "fe6045f9-40fb-4957-b6c4-98287f4d1eb2",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -560,
        400
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "same",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7fc26772-8abe-460b-a8d0-43733b80fa6d",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "different",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "37fa2aad-738e-4447-8823-a6966bafce92",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "new",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "17c2ce51-0521-4e9d-9936-85b57ab0fc2b",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -120,
        400
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Los_Angeles",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-06T22:31:39.431Z",
  "versionId": "5cfb4da1-9d18-4c34-b99d-ab15403f80ff"
}