{
  "active": true,
  "connections": {
    "formata_dados": {
      "main": [
        [
          {
            "node": "dados_validados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_validados": {
      "main": [
        [
          {
            "node": "entra_na_fila",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qualificados_perdidos_clint": {
      "main": [
        [
          {
            "node": "formata_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-03T13:57:23.602Z",
  "id": "fEDQyqvpsDdVhOJE",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "üíª‚åö[FUTURE MINDS][WBN√ÅRIO] - Sala Secreta - Parte 1",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Extrair informa√ß√µes do input\nconst inputData = items[0].json;\nconst respostas = inputData.body;\n\n\n//Formatar n√∫mero Internacional\nfunction formatarTelefone(telefone) {\n  const telefoneLimpo = telefone.replace(/[^\\d]/g, '');\n\n  let ddi;\n  let ddd;\n  let telefoneFormatado;\n\n  // Verificar se o telefone come√ßa com \"55\" antes de format√°-lo\n  if (telefoneLimpo.startsWith('55')) {\n    ddi = telefoneLimpo.slice(0, 2);\n    ddd = telefoneLimpo.slice(2, 4);\n    if (parseInt(ddd, 10) > 28) {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-8);\n    } else {\n      telefoneFormatado = ddi + ddd + telefoneLimpo.slice(-9);\n    }\n  } else {\n    // Se o DDI for diferente de 55, manter o n√∫mero como est√°\n    telefoneFormatado = telefoneLimpo;\n  }\n\n  return telefoneFormatado;\n}\n\n\n// Fun√ß√£o para obter a data atual menos 15 dias no formato brasileiro (dia/m√™s/ano)\nfunction getDataMenos15Dias() {\n  const dataAtual = new Date();\n  dataAtual.setDate(dataAtual.getDate() - 15);\n  const dia = dataAtual.getDate().toString().padStart(2, '0');\n  const mes = (dataAtual.getMonth() + 1).toString().padStart(2, '0'); // +1 porque o m√™s come√ßa em 0\n  const ano = dataAtual.getFullYear();\n  return `${ano}-${mes}-${dia}`;\n}\n\n// Fun√ß√£o para formata√ß√£o de usernames do Instagram\nfunction formatarInstagram(username) {\n  if (username) {\n    // Remover espa√ßos em branco extras\n    const usernameSemEspacos = username.trim();\n\n    // Converter para min√∫sculas\n    const usernameFormatado = usernameSemEspacos.toLowerCase();\n\n    return usernameFormatado;\n  }\n  return '';\n}\n\n// Fun√ß√£o para extrair as UTMs do objeto JSON\nfunction extractUTMs(json) {\n  const utmParams = {};\n\n  function searchUTMs(obj) {\n    for (const key in obj) {\n      if (key.startsWith('utm_')) {\n        utmParams[key] = obj[key];\n      } else if (typeof obj[key] === 'object') {\n        searchUTMs(obj[key]);\n      }\n    }\n  }\n\n  searchUTMs(json);\n\n  return utmParams;\n}\n\n// Extrair as UTMs do objeto JSON de entrada\nconst utms = extractUTMs(inputData);\n\n// Fun√ß√£o para formata√ß√£o de emails\nfunction formatarEmail(email) {\n  // Remover espa√ßos em branco extras\n  const emailSemEspacos = email.trim();\n\n  // Converter para min√∫sculas\n  const emailFormatado = emailSemEspacos.toLowerCase();\n\n  return emailFormatado;\n}\n\n// Fun√ß√£o para formata√ß√£o de nomes\nfunction formatarNome(nome) {\n  if (nome) {\n    const palavras = nome.trim().split(/\\s+/);\n\n    const palavrasMinusculas = ['de', 'dos', 'da', 'e', 'do', 'das', 'di', 'du', 'o', 'a', 'u'];\n\n    for (let i = 0; i < palavras.length; i++) {\n      const palavraAtual = palavras[i].toLowerCase();\n      if (i === 0 || i === palavras.length - 1 || !palavrasMinusculas.includes(palavraAtual)) {\n        palavras[i] = palavraAtual.charAt(0).toUpperCase() + palavraAtual.slice(1);\n      } else {\n        palavras[i] = palavraAtual;\n      }\n    }\n\n    return palavras.join(\" \");\n  }\n  return '';\n}\n\n// Fun√ß√£o para remover todas as aspas e par√™nteses de um texto\nfunction removerAspasEParenteses(texto) {\n    // Substitui todas as ocorr√™ncias de aspas (\"\") por nada\n    let textoSemAspas = texto.replace(/\"/g, '');\n    // Substitui todas as ocorr√™ncias de par√™nteses () por nada\n    textoSemAspas = textoSemAspas.replace(/\\([^()]*\\)/g, '');\n    return textoSemAspas;\n}\n\n\n// Data da aplica√ß√£o em milissefundos\nconst dataAtualEmMilissegundos = new Date().getTime();\n\n// INFORMA√á√ïES PESSOAIS\nconst nome = formatarNome($node[\"qualificados_perdidos_clint\"].json[\"body\"][\"contact_name\"]) || \"\";\n\nconst telefone = formatarTelefone($node[\"qualificados_perdidos_clint\"].json[\"body\"][\"contact_phone\"]) || '';\n\n\nconst email = formatarEmail($node[\"qualificados_perdidos_clint\"].json[\"body\"][\"contact_email\"]) || \"\";\n\n// Montar o objeto de output\nconst output = {\n \"Nome do Cliente\": nome,\n \"E-mail do Cliente\": email,\n \"Telefone do Cliente - Formato BC\": '+' + telefone,\n \"Telefone do Cliente - Formato Z-API\": telefone,\n  data_ultima_quinzena: getDataMenos15Dias(),\n  data_aplicacao: dataAtualEmMilissegundos\n};\n\nreturn [output];"
      },
      "id": "2d5d8cb8-d45e-48a5-8be5-0f9d328b4f31",
      "name": "formata_dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1540,
        440
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Nome do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"Nome do Cliente\"] }}"
            },
            {
              "name": "E-mail do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"E-mail do Cliente\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato BC",
              "value": "={{ $node[\"formata_dados\"].json[\"Telefone do Cliente - Formato BC\"] }}"
            },
            {
              "name": "Telefone do Cliente - Formato Z-API",
              "value": "={{ $node[\"formata_dados\"].json[\"Telefone do Cliente - Formato Z-API\"] }}"
            },
            {
              "name": "Instagram",
              "value": "="
            },
            {
              "name": "pergunta0",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta0\"] }}"
            },
            {
              "name": "pergunta1",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta1\"] }}"
            },
            {
              "name": "pergunta2",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta2\"] }}"
            },
            {
              "name": "pergunta3",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta3\"] }}"
            },
            {
              "name": "pergunta4",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta4\"] }}"
            },
            {
              "name": "pergunta5",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta5\"] }}"
            },
            {
              "name": "pergunta6",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta6\"] }}"
            },
            {
              "name": "pergunta7",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta7\"] }}"
            },
            {
              "name": "pergunta8",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta8\"] }}"
            },
            {
              "name": "pergunta9",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta9\"] }}"
            },
            {
              "name": "pergunta10",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta10\"] }}"
            },
            {
              "name": "pergunta11",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta11\"] }}"
            },
            {
              "name": "pergunta12",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta12\"] }}"
            },
            {
              "name": "pergunta13",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta13\"] }}"
            },
            {
              "name": "pergunta14",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta14\"] }}"
            },
            {
              "name": "pergunta15",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta15\"] }}"
            },
            {
              "name": "pergunta16",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta16\"] }}"
            },
            {
              "name": "pergunta17",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta17\"] }}"
            },
            {
              "name": "pergunta18",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta18\"] }}"
            },
            {
              "name": "pergunta19",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta19\"] }}"
            },
            {
              "name": "pergunta20",
              "value": "={{ $node[\"formata_dados\"].json[\"pergunta20\"] }}"
            },
            {
              "name": "utm_content",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_content\"] }}"
            },
            {
              "name": "utm_source",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_source\"] }}"
            },
            {
              "name": "utm_campaign",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_campaign\"] }}"
            },
            {
              "name": "utm_medium",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_medium\"] }}"
            },
            {
              "name": "utm_term",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_term\"] }}"
            },
            {
              "name": "data_resposta_type",
              "value": "={{$now.toFormat('dd/MM/yyyy HH:mm')}}"
            },
            {
              "name": "data_ultima_quinzena",
              "value": "={{ $node[\"formata_dados\"].json[\"data_ultima_quinzena\"] }}"
            },
            {
              "name": "id_fluxo_nao_agendou_10_min",
              "value": "4913090"
            },
            {
              "name": "id_fluxo_nao_agendou_10_min_desqualificados"
            },
            {
              "name": "API-KEY",
              "value": "1ce1633c-7f94-487a-ad21-62ed7b079427"
            },
            {
              "name": "id_campo_id_banco_de_dados_bot_conversa",
              "value": "1333394"
            },
            {
              "name": "id_campo_utm_source_bot_conversa",
              "value": "1139617"
            },
            {
              "name": "id_campo_utm_campaign_bot_conversa",
              "value": "1139618"
            },
            {
              "name": "id_campo_utm_term_bot_conversa",
              "value": "1139619"
            },
            {
              "name": "id_campo_utm_medium_bot_conversa",
              "value": "1139620"
            },
            {
              "name": "id_campo_utm_content_bot_conversa",
              "value": "1139622"
            },
            {
              "name": "id_campo_utm_fun_bot_conversa",
              "value": "1374334"
            },
            {
              "name": "id_campo_utm_var_bot_conversa",
              "value": "1374335"
            },
            {
              "name": "id_campo_instagram_bot_conversa"
            },
            {
              "name": "id_campo_emailse_bot_conversa",
              "value": "1139626"
            },
            {
              "name": "id_tag_desqualificado_bot_conversa"
            },
            {
              "name": "id_tag_qualificado_bot_conversa"
            },
            {
              "name": "id_campo_iddealac_bot_conversa",
              "value": "1343862"
            },
            {
              "name": "id_campo_idleadac_bot_conversa",
              "value": "1343869"
            },
            {
              "name": "id_campo_pergunta0_bot_conversa",
              "value": "1141321"
            },
            {
              "name": "id_campo_pergunta1_bot_conversa",
              "value": "1141327"
            },
            {
              "name": "id_campo_pergunta2_bot_conversa",
              "value": "1237033"
            },
            {
              "name": "id_campo_pergunta3_bot_conversa",
              "value": "1141320"
            },
            {
              "name": "id_campo_pergunta4_bot_conversa",
              "value": "2048353"
            },
            {
              "name": "id_campo_pergunta5_bot_conversa",
              "value": "1141326"
            },
            {
              "name": "id_campo_pergunta6_bot_conversa",
              "value": "1758470"
            },
            {
              "name": "id_campo_pergunta7_bot_conversa",
              "value": "2249838"
            },
            {
              "name": "id_campo_pergunta8_bot_conversa",
              "value": "2249840"
            },
            {
              "name": "id_campo_pergunta9_bot_conversa"
            },
            {
              "name": "id_campo_pergunta10_bot_conversa"
            },
            {
              "name": "id_campo_pergunta11_bot_conversa"
            },
            {
              "name": "id_campo_pergunta12_bot_conversa"
            },
            {
              "name": "id_campo_pergunta13_bot_conversa"
            },
            {
              "name": "id_campo_pergunta14_bot_conversa"
            },
            {
              "name": "id_campo_pergunta15_bot_conversa"
            },
            {
              "name": "id_campo_pergunta16_bot_conversa"
            },
            {
              "name": "id_campo_pergunta17_bot_conversa"
            },
            {
              "name": "id_campo_pergunta18_bot_conversa"
            },
            {
              "name": "id_campo_pergunta19_bot_conversa"
            },
            {
              "name": "id_campo_pergunta20_bot_conversa"
            },
            {
              "name": "id_campo_data_da_aplicacao_bot_conversa",
              "value": "2249943"
            },
            {
              "name": "id_ending_typeform",
              "value": "="
            },
            {
              "name": "funil",
              "value": "sessao estrategica"
            },
            {
              "name": "variacao_do_funil",
              "value": "webnario_semanal"
            }
          ]
        },
        "options": {}
      },
      "id": "188d3a01-6ffe-4487-8f32-085dd6f244a8",
      "name": "dados_validados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1740,
        440
      ]
    },
    {
      "parameters": {
        "queue": "Webnario - Parte 2 - Clint",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "d2e32f7f-8ac6-4d83-849e-f2ecfeec988b",
      "name": "entra_na_fila",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        1920,
        440
      ],
      "credentials": {
        "rabbitmq": {
          "id": "LuHAjLmTOXHZ3CMW",
          "name": "[RabbitMQ] - Future Minds"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "qualificado-perdido-clint",
        "options": {}
      },
      "id": "eca804b9-4b59-423c-b09a-5954e7ffe6d8",
      "name": "qualificados_perdidos_clint",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1300,
        440
      ],
      "webhookId": "227701d1-6702-47ea-824a-f7fb20f3500b"
    }
  ],
  "pinData": {
    "qualificados_perdidos_clint": [
      {
        "json": {
          "headers": {
            "host": "n8nwebhookhetznerfutureminds.automagicbots.com.br",
            "user-agent": "axios/1.7.2",
            "content-length": "162",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "newrelic": "eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkFwcCIsImFjIjoiNDQ0OTI2MyIsImFwIjoiVW5rbm93biIsInR4IjoiOTA2ZWJjMWU2Y2RlOGE2YSIsInRyIjoiNWFiNjkwZTUyNDgwZjQwY2E2MWJmYzNhZmVlMzg0YzkiLCJwciI6MS4xOTkzNTcsInNhIjp0cnVlLCJ0aSI6MTcyNTM3NDc1Mzk3NCwiaWQiOiJjZWU0ZmNkNDJlOWJmZmRmIn19",
            "traceparent": "00-5ab690e52480f40ca61bfc3afee384c9-cee4fcd42e9bffdf-01",
            "tracestate": "4449263@nr=0-0-4449263-Unknown-cee4fcd42e9bffdf-906ebc1e6cde8a6a-1-1.199357-1725374753974",
            "x-forwarded-for": "52.200.254.28",
            "x-forwarded-host": "n8nwebhookhetznerfutureminds.automagicbots.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "3fc641f1cb52",
            "x-real-ip": "52.200.254.28"
          },
          "params": {},
          "query": {},
          "body": {
            "contact_name": "Vitor Teste",
            "contact_email": "vitorrqueiroztrafego@gmail.com",
            "contact_phone": "+5519984574874",
            "deal_stage": "Base",
            "deal_user": "",
            "deal_status": "OPEN"
          },
          "webhookUrl": "https://n8nwebhookhetznerfutureminds.automagicbots.com.br/webhook/qualificado-perdido-clint",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "zRPVyGjtTGhPaWFr"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-07-02T13:10:10.005Z",
      "updatedAt": "2024-07-02T13:10:10.005Z",
      "id": "Ntg6hZ9Zxy35lAGJ",
      "name": "[CLINT]"
    },
    {
      "createdAt": "2024-09-03T13:57:16.639Z",
      "updatedAt": "2024-09-03T13:57:16.639Z",
      "id": "RKlC2cBKwmEiyN24",
      "name": "[WEBNARIO SEMANAL]"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-09-03T18:01:04.220Z",
  "versionId": "912ffedd-be17-4468-858d-c51c6285f49e"
}