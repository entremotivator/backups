{
  "active": false,
  "connections": {
    "messageInfo": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set user account": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get user account": {
      "main": [
        [
          {
            "node": "user cached?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete user account": {
      "main": [
        [
          {
            "node": "get user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reset Memory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chat": {
      "main": [
        [
          {
            "node": "chatConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "user cached?": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset agent": {
      "main": [
        [
          {
            "node": "reset tool",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save User Data Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Exams Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Specialists Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Health Plan Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Exam Details Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Methods Payment Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory 1": {
      "ai_memory": [
        [
          {
            "node": "Get Chat Memory",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Insert Data User",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Insert Data Bookings",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat Memory": {
      "main": [
        [
          {
            "node": "chat empty?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chat empty?": {
      "main": [
        [],
        [
          {
            "node": "Insert Data User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config to Find All Bookings": {
      "main": [
        [
          {
            "node": "wk bring bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wk bring bookings": {
      "main": [
        [
          {
            "node": "Insert Data Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Data User": {
      "main": [
        [
          {
            "node": "Config to Find All Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatConfig": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scheduling Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "baseInfo": {
      "main": [
        [
          {
            "node": "delete user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch user": {
      "main": [
        [
          {
            "node": "user found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get first user": {
      "main": [
        [
          {
            "node": "Merge 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "user found?": {
      "main": [
        [
          {
            "node": "get first user",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "insert user",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert user": {
      "main": [
        [
          {
            "node": "user registred?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "user registred?": {
      "main": [
        [
          {
            "node": "Merge 2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge 2": {
      "main": [
        [
          {
            "node": "set user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "userAccount": {
      "main": [
        [
          {
            "node": "Get Chat Memory",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "wk response whatsapp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Sign Msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sign Msg": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-15T18:19:39.691Z",
  "id": "ds3jAJzOq9bxFmE1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 4 Clinica",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 0,
          "topP": 1
        }
      },
      "id": "edd3641c-d660-45e7-8a49-7754a9910ceb",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        5020,
        1520
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gera a Resposta\nObs.: Seleciona a Base de Dados a ser usada de acordo com a Empresa de maneira Dinâmica e a usa para responder a solicitação",
        "height": 424,
        "width": 794
      },
      "id": "f7ebd1b8-6f22-43fe-8d7b-c51a8b49622e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4960,
        1260
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "K7oBqF1vnvw165RG"
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "7140f0a0-f4d8-42a7-806b-3a78754f3030",
      "name": "wk response whatsapp",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        6180,
        1300
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body ?? $json }}",
        "options": {}
      },
      "id": "42efc5bc-85fc-47b2-9e77-b82583b7bb2b",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3580,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=user_account_{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}",
        "value": "={{ $json.data.toJsonString() ?? {} }}",
        "expire": true,
        "ttl": 120
      },
      "id": "4d31fa4a-aaad-4b90-a029-c3202e27e448",
      "name": "set user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4760,
        1580
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "keyType": "string",
        "options": {}
      },
      "id": "c38cce3e-1edb-4e17-92d7-af14679d5bd7",
      "name": "get user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4100,
        1340
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}"
      },
      "id": "7d833f79-a8df-4c90-aa3e-e5c2f3cb6217",
      "name": "delete user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3940,
        1340
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Tenta retornar os dados do Usuário",
        "height": 649.4799105287789,
        "width": 999,
        "color": 5
      },
      "id": "5c0dbf7e-f98a-4f34-a7f3-2449f63c7e25",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3900,
        1260
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.data ?? $json ?? {} }}",
        "options": {}
      },
      "id": "78719e6e-04fd-4f99-937f-e5bde1c4cd1d",
      "name": "userAccount",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4760,
        1360
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n    \"evo_api\": \"https://apiwp.wmst.com.br\",\n    \"instance\": \"ibox_cli_23\",\n    \"remoteJid\": \"5512982184879@s.whatsapp.net\",\n    \"pushName\": \"W.M. Soluções Tecnologicas\",\n    \"fromMe\": false,\n    \"unique_id\": \"william_5512982184879\",\n    \"debounce_time\": 5,\n    \"conversation\": \"{{ $json.chatInput }}\"\n  }",
        "options": {}
      },
      "id": "0cc9491d-d4e1-47e3-a012-6ff1b02e8e9b",
      "name": "chatConfig",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3360,
        1140
      ],
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica",
        "sessionTTL": 300,
        "contextWindowLength": 20
      },
      "id": "0dece69a-7574-4cc0-9cd4-64a01585661c",
      "name": "Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        5160,
        1520
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "call this tool to clean chat memory.",
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica"
      },
      "id": "76246e11-4cdd-4141-965d-fde672b23f70",
      "name": "Reset Memory",
      "type": "n8n-nodes-base.redisTool",
      "typeVersion": 1,
      "position": [
        5640,
        1520
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "public": true,
        "options": {
          "responseMode": "lastNode"
        }
      },
      "id": "372e405f-57ff-422d-bfb9-bb2797c49a28",
      "name": "Chat",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        3200,
        1140
      ],
      "webhookId": "e3d20b54-2754-4118-a536-febb3389a454",
      "disabled": true
    },
    {
      "parameters": {},
      "id": "a2182a31-5d55-4811-a476-23a5eca970ed",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        3360,
        1340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "098d3cb2-41df-4d2a-8640-ef5506938e1d",
              "name": "output",
              "value": "=*{{ $workflow.name }}*:\\n{{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "58f6d211-0ccc-40df-80f9-089086cd570a",
      "name": "Sign Msg",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5840,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.data }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "3ccca82f-6473-4681-9ff1-ceb45dc0a4b4",
      "name": "user cached?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4300,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_william_5512982184879_clinica"
      },
      "id": "54fdb571-4c52-40ac-aa0c-c66070580bdf",
      "name": "reset agent",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5840,
        1560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_william_5512982184879_clinica_calendar"
      },
      "id": "106431b9-cfcf-4ccc-a658-94c73009f90c",
      "name": "reset tool",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6000,
        1560
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "name": "save_user_data_tool",
        "description": "Use this tool to store fields such as name, email, address, and date of birth (YYYY-MM-DD) in the database. \n\nThe stored values are permanent and cannot be changed.\n\nNever answer that data was saved.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "JZY3GPC55leuxyHn",
          "cachedResultName": "TOOL Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "supabase"
            },
            {
              "name": "action",
              "stringValue": "update user"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "user_id",
              "stringValue": "={{ $('userAccount').item.json.id ?? '' }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"key\": {\n      \"type\": \"string\",\n      \"description\": \"full_name, full_address or birthday\"\n    },\n    \"value\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"key\",\n    \"value\"\n  ]\n}"
      },
      "id": "51186f15-8c40-498c-aefd-6ea9a48b3123",
      "name": "Save User Data Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5720,
        1800
      ]
    },
    {
      "parameters": {
        "name": "list_exams_tool",
        "description": "Esta ferramenta fornece uma lista de todos os exames disponíveis na clínica, incluindo nome e ID do exame. É útil para identificar rapidamente as opções de exames que podemos oferecer, permitindo que o usuário escolha um exame pelo nome para obter mais detalhes",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "exams"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "hidden_fields",
              "type": "arrayValue",
              "arrayValue": "={{ ['event_id'] }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of exam (optional)\"\n    }\n  }\n}"
      },
      "id": "603864c4-5563-4d6f-bfa2-411ac572fb32",
      "name": "Exams Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5120,
        1780
      ],
      "notes": "Use this tool to obtain and verify basic information about exams as name and exam id provided by the clinic to use in another actions and tools.\n\n---\n\nCall this tool once to return all exams provided and get/verify basic information about exams.\n\n## Workflow:\n1. Use the tool.\n2. Returns list with name, exam ID to use in other actions and tools."
    },
    {
      "parameters": {
        "name": "list_specialists_tool",
        "description": "=Esta ferramenta permite acessar informações detalhadas sobre os médicos cadastrados na clínica. É possível realizar buscas pelo nome, CRM ou pela especialidade do profissional, retornando dados como o nome completo, ID do médico, especialidades e outros detalhes relevantes. Essa funcionalidade facilita a identificação do médico mais adequado às necessidades do usuário, permitindo uma navegação mais prática e eficiente.",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "specialists"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "hidden_fields",
              "type": "arrayValue",
              "arrayValue": "={{ ['event_id'] }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"crm\": {\n      \"type\": \"number\",\n      \"description\": \"crm of medical (optional)\"\n    },\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of medical (optional)\"\n    },\n    \"specialist\": {\n      \"type\": \"string\",\n      \"description\": \"specialist of medical (optional)\"\n    }\n  }\n}"
      },
      "id": "61c9f808-fda6-4214-84b2-58558f21640c",
      "name": "Specialists Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5000,
        1820
      ]
    },
    {
      "parameters": {
        "name": "list_health_plans_tool",
        "description": "Call this tool to get information about available health plans and insurance options.",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "health plans"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of health plan (optional)\"\n    }\n  }\n}"
      },
      "id": "41abc50a-1d2f-43fd-acb5-ad56a17a9ed1",
      "name": "Health Plan Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5360,
        1780
      ]
    },
    {
      "parameters": {
        "name": "details_any_exam_tool",
        "description": "Use esta ferramenta para obter detalhes específicos sobre um exame utilizando o ID do exame. O ID pode ser obtido a partir da lista de exames. Isso inclui informações como preço, duração, jejum necessário, material coletado, entre outros. O usuário pode solicitar detalhes de um exame pelo nome, e eu buscarei o ID correspondente antes de obter as informações detalhadas",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "exam details"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"exam_id\": {\n      \"type\": \"number\",\n      \"description\": \"exam's id\"\n    }\n  }\n}"
      },
      "id": "07a7323c-23cf-438f-8704-f9d1bf7b626f",
      "name": "Exam Details Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5240,
        1800
      ],
      "notes": "Call this tool to get all (calendar id, price, category, duration, jejum, collected_material, lab_partner, age_limit, notes, discount_convenio) details about a specific exam using the exam ID.\n\n## Required inputs:\n- Exam ID (number, required).\n\n## Workflow:\n1. Use the exam ID to retrieve the exam details.\n2. Return all information for the specified exam."
    },
    {
      "parameters": {
        "content": "## Tools",
        "height": 183.50432036410257,
        "width": 866,
        "color": 4
      },
      "id": "4fdb88c2-a4cc-4060-92d5-4a1f08f847ad",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4960,
        1760
      ]
    },
    {
      "parameters": {
        "name": "list_payment_methods_tool",
        "description": "Call this tool to get information about payment methods.",
        "workflowId": {
          "__rl": true,
          "value": "pliyk2HChCR880pK",
          "mode": "list",
          "cachedResultName": "Comp Clinica"
        },
        "fields": {
          "values": [
            {
              "name": "tool",
              "stringValue": "payments"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"description\": \"name of method payment (optional)\"\n    }\n  }\n}"
      },
      "id": "59c1766b-b546-4141-86fd-de0bfe1925ff",
      "name": "Methods Payment Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5480,
        1800
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}_clinica",
        "sessionTTL": 600,
        "contextWindowLength": 7
      },
      "id": "e222fb5f-926e-4325-b5c5-d5a3b8feee8b",
      "name": "Chat Memory 1",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        5640,
        980
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "groupMessages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        4960,
        1100
      ],
      "id": "58f49f4c-be64-493e-9135-af67cda099f4",
      "name": "Get Chat Memory"
    },
    {
      "parameters": {
        "mode": "insert",
        "insertMode": "override",
        "messages": {
          "messageValues": [
            {
              "type": "ai",
              "message": "=User {{ $('userAccount').item.json.id ? 'is' : 'is not yet' }} registered, their name is \"{{ $('userAccount').first().json.full_name ?? '' }}\", email is \"{{ $('userAccount').first().json.email ?? '' }}\", contact phone number is \"{{ $('userAccount').first().json.phone ?? $('messageInfo').first().json.remoteJid.split('@')[0] }}\", and current address is \"{{ $('userAccount').first().json.full_address ?? '' }}\"",
              "hideFromUI": true
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        5460,
        1100
      ],
      "id": "ecf1f01d-2048-4da2-9009-7fb9b0234fab",
      "name": "Insert Data User"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9914c630-b523-42ae-a3a0-b224b821f6ca",
              "leftValue": "={{ $json.messagesCount }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5280,
        1100
      ],
      "id": "6794285c-66d7-4c14-bb15-a0b4e5d9d0d8",
      "name": "chat empty?"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "19e9b408-9bdb-4535-b265-1f714a0dde0d",
              "name": "action",
              "value": "list bookings",
              "type": "string"
            },
            {
              "id": "d6788f61-2c2f-42c1-a263-62d052127dc0",
              "name": "remoteJid",
              "value": "={{ $('userAccount').item.json.phone.toString().split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "4b5c318d-4909-4140-8465-7bb6bf8f2116",
              "name": "query",
              "value": "={\n  \"email\": \"\",\n  \"event_id\": \"\",\n  \"status\": \"all\"\n}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "e0ab1a04-c81a-44ca-84a5-5cae09cd9d80",
      "name": "Config to Find All Bookings",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5780,
        1100
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "QTrKQkY4jxrACTpy",
          "cachedResultName": "COMP Schedule"
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "id": "417aefb5-fc99-4f3e-afda-f8d48ac3aec4",
      "name": "wk bring bookings",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        5940,
        1100
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "type": "ai",
              "message": "={{ $json.response.length ? `User has this bookings: ${$json.response}\n` : 'User does not have any booking at moment' }}",
              "hideFromUI": true
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        6100,
        1100
      ],
      "id": "80d5c8ad-4885-4de9-a586-1decd4613059",
      "name": "Insert Data Bookings"
    },
    {
      "parameters": {
        "name": "scheduling_tool",
        "description": "Call this workflow to handle all requests related to managing appointments, events, or meetings.",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "JZY3GPC55leuxyHn",
          "cachedResultName": "TOOL Clinica"
        },
        "responsePropertyName": "output",
        "fields": {
          "values": [
            {
              "name": "agent",
              "stringValue": "calendar"
            },
            {
              "name": "messageInfo",
              "type": "objectValue",
              "objectValue": "={{ $('messageInfo').first().json }}"
            },
            {
              "name": "userAccount",
              "type": "objectValue",
              "objectValue": "={{ $('userAccount').first().json }}"
            }
          ]
        }
      },
      "id": "7b833efb-0bfd-4b0f-840d-290669af7bb4",
      "name": "Scheduling Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5600,
        1780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c5e68ae0-e5c0-4770-91f9-3d9e67965ef8",
              "name": "url_api",
              "value": "https://agendaclinic.com/api/v1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "be317669-395b-410e-ac3a-ae5470740f5c",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3740,
        1340
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3dc387d1-961d-459e-ac7b-a2662290570e",
              "name": "data",
              "value": "={{ $json.data.first() }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "8ad15b18-b398-469f-9681-3dbeee76ccfc",
      "name": "get first user",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4300,
        1560
      ]
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/pacient",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('messageInfo').item.json.remoteJid.split('@')[0].slice(2) }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "e28da1fa-9183-47b3-8f99-e977139294b2",
      "name": "fetch user",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3940,
        1600
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').item.json.url_api }}/pacients",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0].slice(2) }}"
            },
            {
              "name": "origin",
              "value": "whatsapp"
            },
            {
              "name": "phone_is_whatsapp",
              "value": "={{ true }}"
            },
            {
              "name": "phone_verified_at",
              "value": "={{ $now.toUTC() }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "64c2d75c-5248-424e-baaa-7fbfd2a1f53d",
      "name": "insert user",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4300,
        1740
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d94d8b68-f7be-4c70-9965-d947f68cdc7c",
              "leftValue": "={{ $json.status == 'success' && $json.data.isNotEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4100,
        1600
      ],
      "id": "c5e04892-a993-4e93-b5ab-e3fb051b9284",
      "name": "user found?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d94d8b68-f7be-4c70-9965-d947f68cdc7c",
              "leftValue": "={{ $json.status == 'success' && $json.data.hasField('id') }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4540,
        1740
      ],
      "id": "2c6a6fe7-3134-4ba6-8ce8-d46534bc1081",
      "name": "user registred?"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        4540,
        1580
      ],
      "id": "3701f096-1a8d-4361-9628-0f07199a9ee4",
      "name": "Merge 2"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "6d4f63cd-58da-492b-ab55-aa84e4b6377b",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6040,
        1300
      ],
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').first().json.conversation }}",
        "options": {
          "systemMessage": "=Você é um assistente útil de uma clínica médica.\n\n## Context:\nData e Hora atual: '{{ $now.setLocale('pt-BR') }}'\nNosso endereço: Av. Godoy Neto, 389 - Olaria, Lorena - SP, 12607-060.\nIdioma: pt-BR\nTom: Amigável, educado, prestativo, eficiente, acolhedor e humanizado. Esforce-se para criar uma interação que pareça natural, empática e compreensiva. \nSeja objetivo, não forneca detalhes que não forem perguntados.\nResponda sempre em primeira pessoa.\nSó informe o preço se for solicitado/perguntado.\nNão aceitamos encaminhamento pelo SUS.\nAgendamentos somente em dias uteis.\nSe usuário tentar cancelar uma consulta, verifique se ele não remarca-la para outra data, caso contrário pode continuar com cancelamento.\nSe for fazer um agendamento precisa saber se é consulta ou exame.\n\n# Tool Calls\n- When the user mentions their name, the system will call the **save_user_data_tool** to update their details in the database.\n\n# Output Booking Template\n📅 **{title} - {professional}**\nStatus: **{status}** ✅\nScheduled for **{start}** until **{end}**\nLocation: **{location}**\nCode: **{id}**\n\n## Workflow Guidelines:\n1. **Exam's Details**:\n   - Ask for exam's name to locale if not provided.\n   - Use \"exam_details_tool\" to retrieve details."
        }
      },
      "id": "27ce7d17-3081-4018-96d8-f06974820cf5",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5280,
        1360
      ],
      "retryOnFail": true,
      "waitBetweenTries": 3000
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "evo_api": "https://apiwp.wmst.com.br",
          "instance": "ibox_cli_23",
          "remoteJid": "5512982184879@s.whatsapp.net",
          "pushName": "W.M. Soluções Tecnologicas",
          "fromMe": false,
          "unique_id": "ibox_cli_23_5512982184879",
          "evo_api_key": "3D48F896-1228-4268-8F5D-4200DA4C3661",
          "conversation": "oi cli"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    },
    {
      "createdAt": "2024-10-08T13:33:46.636Z",
      "updatedAt": "2024-10-08T13:33:46.636Z",
      "id": "aSNW5tPyOIOEr9rS",
      "name": "Agent"
    },
    {
      "createdAt": "2024-12-18T13:55:11.434Z",
      "updatedAt": "2024-12-18T13:55:11.434Z",
      "id": "02kkCHve480aFjG4",
      "name": "Clinic"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2025-01-18T23:31:23.202Z",
  "versionId": "8de8ccab-85ba-4f9f-8d56-330eaebd741d"
}