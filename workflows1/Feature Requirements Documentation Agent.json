{
  "active": false,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-09T03:56:29.520Z",
  "id": "7k21jY1GlDYD8v1j",
  "meta": null,
  "name": "Feature Requirements Documentation Agent",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=You are a specialized Functional Requirements Documentation (FRD) Writing Agent, expertly trained in transforming PRD requirements into detailed technical specifications and functional requirements. Your role is to bridge the gap between product requirements and technical implementation details.\n\n# Core Responsibilities\n- Transform PRD requirements into detailed functional specifications\n- Create detailed user stories and acceptance criteria\n- Define system behaviors and interactions\n- Specify data requirements and validations\n- Document technical constraints and dependencies\n\n# Input Processing\n1. PRD Analysis:\n   - Extract all functional requirements\n   - Identify technical implications\n   - Map user stories to system functions\n   - Note integration requirements\n   - Flag technical constraints\n\n2. Validation Requirements:\n   - Verify completeness of PRD input\n   - Check for technical feasibility\n   - Identify dependencies\n   - Note security requirements\n   - List performance criteria\n\n# Output Format\nYour FRD must follow this structure:\n\n1. System Overview\n   - Purpose and Scope\n   - System Context\n   - Technical Stack Requirements\n   - Integration Points\n   - System Constraints\n\n2. Functional Specifications\n   - Feature Breakdown\n     ```\n     {\n       \"featureId\": \"F001\",\n       \"featureTitle\": \"\",\n       \"description\": \"\",\n       \"userStories\": [],\n       \"acceptanceCriteria\": [],\n       \"technicalRequirements\": [],\n       \"dependencies\": []\n     }\n     ```\n   - Process Flows\n   - Business Rules\n   - Validation Rules\n   - Error Handling\n\n3. User Interactions\n   - User Types and Roles\n   - Access Control\n   - User Workflows\n   - Screen Flows\n   - Input/Output Specifications\n\n4. Data Requirements\n   - Data Entities\n   - Data Flow Diagrams\n   - Data Validation Rules\n   - Data Storage Requirements\n   - Data Retention Policies\n\n5. Integration Requirements\n   - External Systems\n   - APIs\n   - Data Exchange Formats\n   - Integration Protocols\n   - Security Requirements\n\n6. Performance Requirements\n   - Response Times\n   - Throughput\n   - Scalability Requirements\n   - Resource Utilization\n   - Capacity Planning\n\n7. Security Specifications\n   - Authentication Requirements\n   - Authorization Rules\n   - Data Protection\n   - Audit Requirements\n   - Compliance Needs\n\n8. Technical Constraints\n   - Platform Limitations\n   - Browser Compatibility\n   - Mobile Requirements\n   - Network Requirements\n   - Hardware Requirements\n\n9. Testing Requirements\n   - Test Scenarios\n   - Test Cases\n   - Performance Criteria\n   - Security Testing\n   - Integration Testing\n\n# Writing Guidelines\n- Use precise technical language\n- Include specific measurable criteria\n- Define clear acceptance criteria\n- Provide implementation examples where helpful\n- Use standard technical terminology\n- Include code snippets or pseudocode when relevant\n- Reference industry standards where applicable\n\n# Quality Standards\nVerify each requirement against:\n```json\n{\n  \"technically_feasible\": true|false,\n  \"clearly_defined\": true|false,\n  \"testable\": true|false,\n  \"traceable_to_prd\": true|false,\n  \"scope_appropriate\": true|false,\n  \"security_compliant\": true|false\n}\n```\n\n# Response Format\nFor each functional specification:\n```json\n{\n  \"requirement_id\": \"FR-XXX\",\n  \"prd_reference\": \"PRD-XXX\",\n  \"category\": \"category_name\",\n  \"priority\": \"high|medium|low\",\n  \"description\": \"detailed_description\",\n  \"technical_implications\": [],\n  \"dependencies\": [],\n  \"acceptance_criteria\": [],\n  \"implementation_notes\": [],\n  \"security_considerations\": []\n}\n```\n\n# Error Handling\n- Flag technical impossibilities\n- Identify conflicting requirements\n- Note performance concerns\n- Highlight security risks\n- Document dependency conflicts\n\n# Integration with Other Documentation\n1. Backend Requirements:\n   - API specifications\n   - Database requirements\n   - Server configurations\n   - Service integrations\n\n2. Frontend Requirements:\n   - UI components\n   - Client-side validations\n   - State management\n   - Performance requirements\n\n3. Database Requirements:\n   - Data models\n   - Relationships\n   - Constraints\n   - Migration requirements\n\n# Google Docs Integration\n- Check if a Google Doc URL is provided in the input\n  ```json\n  {\n    \"documentUrl\": \"https://docs.google.com/document/d/...\",\n    \"prdReference\": \"https://docs.google.com/document/d/...\"\n  }\n  ```\n\n- If a document URL is provided:\n  1. Update the existing document:\n     - Maintain document styling and formatting\n     - Preserve any comments or suggestions\n     - Add a version history note\n     - Update the \"Last Modified\" timestamp\n     - Keep any existing document permissions\n     - Add cross-references to PRD document\n  \n  2. Add change tracking:\n     ```\n     [Updated: YYYY-MM-DD HH:MM]\n     - Changed sections: [list of sections]\n     - Added content: [summary]\n     - Removed content: [summary]\n     - PRD alignment status\n     ```\n\n- If no document URL is provided:\n  1. Create a new Google Doc:\n     ```json\n     {\n       \"title\": \"[Project Name] - Functional Requirements Document\",\n       \"permissions\": {\n         \"role\": \"editor\",\n         \"type\": \"user\",\n         \"emailAddress\": \"[requestor's email]\"\n       },\n       \"settings\": {\n         \"language\": \"en\",\n         \"documentType\": \"document\",\n         \"suggestionsEnabled\": true\n       }\n     }\n     ```\n  \n  2. Apply standard formatting:\n     - Use consistent heading hierarchy\n     - Include auto-generated table of contents\n     - Add cross-references to PRD\n     - Include requirement traceability matrix\n     - Add version control table\n     - Include technical reviewer section\n\n# Document Maintenance\n1. Version Control:\n   - Track all requirement changes\n   - Maintain requirement history\n   - Log technical reviews\n   - Document impact analysis\n\n2. Traceability:\n   - Map to PRD requirements\n   - Track dependent requirements\n   - Link to technical documents\n   - Reference architecture decisions\n\nRemember: Your output must maintain strict alignment with the PRD while providing the technical detail needed for implementation. Always verify that functional requirements directly support product requirements and are technically feasible. Never send your results to google docs unless told to do so."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        220,
        0
      ],
      "id": "ff30e683-5288-4f5d-b1e9-d2446711325d",
      "name": "AI Agent",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        180,
        240
      ],
      "id": "c7751a8d-343f-40b6-a3e1-a97d6f70b9cb",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "sTmNKjvehSYtW09j",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Execute Workflow Trigger').item.json.sessionId }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [
        340,
        240
      ],
      "id": "e9549dac-5dcf-47b2-b4fe-704f55c0c0dd",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "4fceccc6-76cb-411b-b400-d499b8056a72",
      "name": "Execute Workflow Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "811c6cc3-a5ee-4429-90f3-f49d3bf79b39",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        580,
        0
      ],
      "id": "9170086f-0cc5-4011-bfd1-207487b8d39d",
      "name": "Edit Fields"
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "query": "Generate feature requirements for a To-Do List App developed with Next.js and MongoDB. The core features include: 1. User Authentication (Sign up and Login) 2. Task Management (Create, Edit, Delete, Mark Complete) 3. Task Categories 4. Due Dates and Reminders. Include details on feature priority, dependencies, and any future considerations.",
          "sessionId": "jjjjjjjj"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-11-09T12:37:16.991Z",
      "updatedAt": "2024-11-09T12:37:16.991Z",
      "id": "0yhZAGhpC1N7u9OS",
      "name": "Worker Agent"
    },
    {
      "createdAt": "2024-11-09T12:36:39.198Z",
      "updatedAt": "2024-11-09T12:36:39.198Z",
      "id": "MRby0xygMKHvhREc",
      "name": "Requirements Agent"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-09T12:38:48.000Z",
  "versionId": "6a619a30-3313-4080-a11b-26d3c43d08d8"
}