{
  "active": false,
  "connections": {
    "send to agent?": {
      "main": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch Agents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset memo": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EWT": {
      "main": [
        [
          {
            "node": "send to agent?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "EWT Fixed": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Query",
            "type": "main",
            "index": 0
          },
          {
            "node": "EWT Fixed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar Avaliability": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "config prompt": {
      "main": [
        [
          {
            "node": "reset memo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Agents": {
      "main": [
        [
          {
            "node": "config prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Response2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contextual Compression Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Contextual Compression Retriever",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Question and Answer Chain": {
      "main": [
        [
          {
            "node": "Response WK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Contextual Compression Retriever",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Question and Answer Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Qdant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Qdant Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "School Info Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Register": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar List": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Update": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Cancel": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-06T14:29:06.266Z",
  "id": "I4t2yzZ4SbcmpeOK",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "TOOL Faculdade Faro",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3d3f5973-0888-4a4a-9b95-74a7908fcf4c",
              "leftValue": "={{ $json.agent }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "43fa86af-0b9d-408c-8940-74a3194f2462",
      "name": "send to agent?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        920,
        760
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "93b3a4ae-a50c-4b62-9872-f980bc19054c",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dd4866bb-cc92-48f3-bb46-9d7fda2b87c2",
      "name": "Response2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1940,
        980
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('EWT').first().json.messageInfo.unique_id }}_liquid_gas"
      },
      "id": "c6362077-ff40-41a9-9ea6-a6e9571c42de",
      "name": "reset memo",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1460,
        980
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "id": "31f6426c-aff8-4e56-afe8-08e7b8e2836e",
      "name": "EWT",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        740,
        760
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.agent }}",
                    "rightValue": "calendar",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "calendar"
            }
          ]
        },
        "options": {}
      },
      "id": "9cceda7c-d71b-45b5-8d7d-1ec7a23108d2",
      "name": "Switch Agents",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1140,
        980
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b93aece8-fdd5-433c-ae7c-e9a0f447b7e1",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        720,
        1240
      ],
      "webhookId": "f6849a37-a88b-4a5e-b4e2-a7dc8f09a4ba",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a1123d8e-c791-4dda-bbd0-e24c5b1d35d2",
              "name": "query",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4e18e689-50dd-47df-b2fe-2c5553447b62",
      "name": "Query",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        960,
        1160
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"query\": \"Agendamento de entrega de gás de cozinha para William, telefone 12982184879, para amanhã às 08:00.\",\n  \"agent\": \"calendar\",\n  \"messageInfo\": {\n    \"evo_api\": \"https://apiwp.wmst.com.br\",\n    \"instance\": \"william\",\n    \"remoteJid\": \"5512982184879@s.whatsapp.net\",\n    \"pushName\": \"W.M. Soluções Tecnologicas\",\n    \"fromMe\": false,\n    \"unique_id\": \"william_5512982184879\",\n    \"debounce_time\": 5,\n    \"conversation\": \"sim\"\n  },\n  \"userAccount\": {\n    \"id\": 1,\n    \"nome\": \"William\",\n    \"sobrenome\": \"Almeida\",\n    \"nome_completo\": \"William Almeida\",\n    \"whatsapp\": \"12982184879\",\n    \"email\": \"williamkillerca@hotmail.com\",\n    \"endereco\": \"\"\n  }\n}",
        "options": {}
      },
      "id": "68d21b8a-5c82-4a78-8dd8-09a1b5530076",
      "name": "EWT Fixed",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        960,
        1320
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "32098c10-73c7-44d1-8457-1ab95d3e467b",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1160,
        1240
      ],
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('EWT').first().json.messageInfo.unique_id }}_faro",
        "sessionTTL": 300,
        "contextWindowLength": 15
      },
      "id": "141cc491-693b-42bf-865b-b5b9ad18f99d",
      "name": "Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        1620,
        1180
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 1,
          "topP": 1
        }
      },
      "id": "e62198c6-98db-46c5-92f4-e5de0f70e890",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1560,
        1260
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "=williamkillerca@gmail.com",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "timeMin": "={{ $fromAI('data_start', 'data e hora do agendamento formato 2024-11-02T11:01:00-03:00') }}",
        "timeMax": "={{ $fromAI('data_end', 'data e hora do agendamento formato 2024-11-02T11:01:00-03:00') }}",
        "options": {
          "outputFormat": "availability"
        }
      },
      "id": "1807ec8f-3813-4a1b-ae60-b65251995530",
      "name": "Google Calendar Avaliability",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2260,
        1220
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "08eccb40-00d8-4101-a52e-f6cbaf728cd1",
              "name": "system",
              "value": "=<prompt_mestre_agendamento>\n<info_adicionais>\nData e Hora Atual: {{ $now.toISO() }}\n\n<sobre_o_usuario>\nUsuário {{ $('EWT').first().json.userAccount.id ? 'já' : 'ainda não' }} é cliente, seu nome é \"{{ ($('EWT').first().json.userAccount.nome) ? $('EWT').first().json.userAccount.nome : $('EWT').first().json.messageInfo.pushName }}\", o e-mail é \"{{ $('EWT').first().json.userAccount.email ?? '' }}\", telefone para contato é \"{{ $('EWT').first().json.messageInfo.remoteJid.split('@')[0] }}\" e seu endereço atual é \"{{ $('EWT').first().json.userAccount.endereco ?? '' }}\".\n\n<personalidade>\nFunção: Assistente virtual especializado em agendamento de reuniões com a escola.\n\n<funcoes_principais>\n- Agendar reuniões com a escola\n- Confirmar informações de contato\n- Verificar disponibilidade de horários\n\n<regras_gerais>\nRespostas claras e objetivas (máx. 350 caracteres)\nLinguagem simples e acessível, evitando termos técnicos\nInformar o cliente imediatamente se algum dado estiver indisponível ou impreciso\nSempre formate o Telefone com Mask.\n\n<agendamento_reuniao>\nPara agendamento, SIGA as etapas, NÃO pule nenhuma:\n\n1. Identificar o motivo do agendamento (reunião).\n3. Solicite as informações do cliente (nome, telefone, e-mail)\n  - Se algum desses dados estiver faltando ou precisar de alteração, por favor, informe-os.\n4. Informe ao usuário os horários disponíveis para agendamento.\n5. Solicite a data e horário desejados para o agendamento.\n\n**Verificação de Horários:**\nAntes de finalizar o agendamento, verifique se o horário solicitado está dentro dos horários permitidos. Se o horário não estiver disponível, informarei:\n\"O horário solicitado não está disponível. Os horários permitidos são: [Horários permitidos via school_info_tool]. Por favor, selecione um novo horário.\"\n\n**Confirmação:**\nDepois de coletar todas informações, exiba-os e solicite a confirmação para prosseguir com o agendamento.\n\nApós o SALVAR ou ATUALIZAR o agendamento, NUNCA envie o link dispónivel.\n\nFormato de Salvamento de Agendamento:\n\n- Data e Hora Agendada: [Data e Hora]\n- Nome do Usuário: [Nome]\n- Telefone: [Telefone]\n- Assunto: [Assunto]\n- E-mail: [E-mail]\n\nInstruções:\n\nSubstitua cada texto entre colchetes pelos dados específicos do agendamento.\nUtilize este formato para garantir clareza e consistência todas as vezes que você precisar registrar um agendamento.\n\n**Exibição do Agendamento**\nSempre exiba o ID do Evento junto das demais informações.\n\n</prompt_mestre_agendamento>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6482c40a-ce01-4090-91eb-b4bd82e8e69a",
      "name": "config prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1300,
        980
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('EWT').item.json.query }}",
        "options": {
          "systemMessage": "={{ $json.system }}",
          "maxIterations": 5
        }
      },
      "id": "c1ddaec6-65de-4c63-bab3-81d1ba97b9a0",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1600,
        980
      ],
      "retryOnFail": true,
      "waitBetweenTries": 3000
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@gmail.com"
        },
        "timeMin": "={{ $now.format('y-LL-dd H:m:s') }}",
        "timeMax": "={{ $now.plus(10, 'seconds').format('y-LL-dd H:m:s') }}",
        "options": {
          "outputFormat": "availability"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.2,
      "position": [
        2180,
        980
      ],
      "id": "1a426719-9233-40a6-8272-43a4da0ab803",
      "name": "Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {},
      "id": "c14b27f6-8609-4b93-899c-4f472eaac0bd",
      "name": "Contextual Compression Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverContextualCompression",
      "typeVersion": 1,
      "position": [
        1260,
        760
      ]
    },
    {
      "parameters": {
        "topK": "={{ $json.slots }}"
      },
      "id": "daebc941-858e-49d0-8a96-aa6dfc14d791",
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        1540,
        760
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemPromptTemplate": "Use the following pieces of context to answer the users question. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}"
        }
      },
      "id": "c72b1aea-3ecd-4eb7-b442-4c6ec5c71e1f",
      "name": "Question and Answer Chain",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.3,
      "position": [
        1140,
        560
      ]
    },
    {
      "parameters": {
        "model": "llama-3.2-90b-text-preview",
        "options": {
          "temperature": 0
        }
      },
      "id": "96e2b18c-c844-4476-8008-23c4eb8c480f",
      "name": "Groq Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1140,
        760
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "80d0945b-cf95-4ab7-b400-1a4d645c2108",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        2100,
        760
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "={{ $json.response.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5125c646-5c6a-40c5-85df-2740ad9dc5bf",
      "name": "Response WK",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1480,
        560
      ]
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "notion_faro",
          "mode": "list",
          "cachedResultName": "notion_faro"
        },
        "options": {
          "searchFilterJson": "={\n  \"should\": [\n    {\n      \"key\": \"metadata.type\",\n      \"match\": {\n        \"value\": \"{{ $('EWT').item.json.type ?? '' }}\"\n      }\n    }\n  ]\n}"
        }
      },
      "id": "f8366f85-b51b-4456-9fc3-d3f14c149711",
      "name": "Qdant Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        1820,
        760
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "name": "general_knowledge_base_tool",
        "description": "Chame essa ferramenta para consultar horário de funcionamento para evitar agendar reuniões em momento errado.",
        "workflowId": {
          "__rl": true,
          "value": "I4t2yzZ4SbcmpeOK",
          "mode": "list",
          "cachedResultName": "TOOL Faculdade Faro"
        }
      },
      "id": "33b54546-90ef-4ebc-802e-2227ae6a0558",
      "name": "School Info Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1760,
        1260
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use esta ferramenta para realizar o agendamentos do usuário.",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@gmail.com"
        },
        "start": "={{ $fromAI('data_init', 'data e hora do agendamento') }}",
        "end": "={{ $fromAI('data_end', 'data e hora do agendamento') }}",
        "additionalFields": {
          "description": "={{ $fromAI('description', 'Descrição breve do agendamento, incluindo informações importantes como tipo de produto, endereço, nome do cliente, telefone, e-mail, e horário') }}",
          "summary": "={{ $fromAI('summary', 'Um resumo conciso da nomeação, destacando informações essenciais como propósito e detalhes importantes') }}"
        }
      },
      "id": "e042ca01-67d0-4c64-ad61-c39e52053195",
      "name": "Calendar Register",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        1980,
        1220
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use esta ferramenta para localizar agendamentos do usuário, sempre solicite a data e hora do agendamento e, se disponível, o código do pedido para facilitar a localização.",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "options": {
          "timeMin": "={{ $fromAI('data_after', 'Data e hora da entrega agendada informada pelo usuário menos 24 horas') }}",
          "timeMax": "={{ $fromAI('data_before', 'Data e hora da entrega agendada informada pelo usuário mais 24 horas') }}",
          "fields": "items(id,status,htmlLink,created,summary,description,creator,organizer,start(dateTime),end(dateTime))"
        }
      },
      "id": "49886d5e-91f2-4db4-b7dd-08fd665f9cf2",
      "name": "Calendar List",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2120,
        1220
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "eventId": "={{ $fromAI('event_id', 'id do evento') }}",
        "updateFields": {
          "description": "={{ $fromAI('description', 'Descrição breve do agendamento, incluindo informações importantes como tipo de produto, endereço, telefone, nome do cliente e horário') }}",
          "end": "={{ $fromAI('data_end', 'data e hora do agendamento') }}",
          "start": "={{ $fromAI('data_start', 'data e hora do agendamento') }}",
          "summary": "={{ $fromAI('summary', 'Um resumo conciso da nomeação, destacando informações essenciais como propósito e detalhes importantes') }}"
        }
      },
      "id": "df566494-2361-42fa-991f-30e26077b8f9",
      "name": "Calendar Update",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        1980,
        1400
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use esta ferramenta para cancelar um agendamento por vez em intervalos de chamadas de 5 segundos, desde que estejam dentro do prazo de 20 minutos após a data e horário inicial. Para cancelar, é necessário o ID do Evento, para isso liste primeiro os agendamentos do usuário.",
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "eventId": "={{ $fromAI('event_id', 'ID único do agendamento que você deseja cancelar') }}",
        "options": {}
      },
      "id": "13f66873-c893-4dfa-9e36-042ee094e81a",
      "name": "Calendar Cancel",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        2120,
        1400
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    }
  ],
  "pinData": {
    "EWT": [
      {
        "json": {
          "query": "localização da Faculdade FARO",
          "type": "general",
          "slots": "3",
          "prompt": "onde fica a faculdade?"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    },
    {
      "createdAt": "2024-10-30T23:31:05.255Z",
      "updatedAt": "2024-10-30T23:31:05.255Z",
      "id": "IDsda42rHm8bi7eR",
      "name": "Tool"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-11-15T18:17:11.370Z",
  "versionId": "3b6dbad5-0022-4c29-aa51-2f7b70c144c6"
}