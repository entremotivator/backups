{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-17T10:21:50.242Z",
  "id": "UsX08HjZtmF75Sx4",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Nylas Integration",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const challenge = $('Webhook').first().json.query.challenge;\n\nif (challenge) {\n  return {\n    response: challenge  // Respond with the challenge\n  };\n} else {\n  // Process the webhook normally if not a challenge\n  return $input.all();\n}\n\nconst challenge = $json[\"query\"][\"challenge\"];\n\nif (challenge) {\n  return [\n    {\n      json: {\n        challenge: challenge\n      },\n      response: {\n        body: challenge, // Respond with the challenge in the body\n      }\n    }\n  ];\n} else {\n  return $input.all(); // Continue processing if it's not a challenge request\n}\n\n"
      },
      "id": "3ec10604-c734-48d4-9ff4-c27549c26d39",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        600
      ]
    },
    {
      "parameters": {
        "options": {
          "responseCode": 200
        }
      },
      "id": "db8491ae-bfa1-4322-b52d-099e971f4d5f",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1300,
        940
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Access the incoming webhook event data\nconst eventQuery =  $('Webhook').first().json.query;\n\n// Check if the query contains a 'challenge' field\n// if (eventQuery?.challenge) {\n//   // If a challenge exists, return it in the response\n//   return {\n//     statusCode: 200,\n//     body: eventQuery.challenge\n//   };\n// } else {\n//   // Otherwise, respond with just a 200 status\n//   return {\n//     statusCode: 200,\n//     body: 'OK'\n//   };\n// }\n\nif (eventQuery?.challenge) {\n  // Return the challenge as an array of objects as required by n8n\n  return [\n    {\n      json: {\n        challenge: eventQuery.challenge\n      }\n    }\n  ];\n} else {\n  // Return OK as an array of objects\n  return [\n    {\n      json: {\n        message: 'OK'\n      }\n    }\n  ];\n}\n"
      },
      "id": "8cdb6c29-caec-4367-a09e-204aa3da0a82",
      "name": "Code1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        900
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "49435984-e0d4-4938-bcc9-30e0a09af1da",
              "name": "query",
              "value": "=",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "dd4688fb-4db2-4139-8579-ab1f7af9d8e8",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        140,
        1120
      ],
      "disabled": true
    },
    {
      "parameters": {
        "path": "nylas123",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "5bcef8d8-86e7-4f3f-9d2c-e5b9a982541c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        360,
        900
      ],
      "webhookId": "dc973992-b5b6-4b20-8dad-e0771a30577f"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-10-22T06:25:32.000Z",
  "versionId": "8014d99e-1659-420b-8e78-6bed2bfdabbf"
}