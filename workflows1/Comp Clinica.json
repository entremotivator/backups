{
  "active": false,
  "connections": {
    "EWT": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Request to Tool?": {
      "main": [
        [
          {
            "node": "Switch Tool",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Exams": {
      "main": [
        [
          {
            "node": "Cached? 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Details Exam": {
      "main": [
        [
          {
            "node": "Cached? 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Specialists": {
      "main": [
        [
          {
            "node": "Cached? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Payments": {
      "main": [
        [
          {
            "node": "Cached? 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Health Plans": {
      "main": [
        [
          {
            "node": "Cached? 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cached? 3": {
      "main": [
        [
          {
            "node": "List Payments",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Load Data 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cached? 2": {
      "main": [
        [
          {
            "node": "List Specialists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Load Data 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cached? 1": {
      "main": [
        [
          {
            "node": "List Health Plans",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Load Data 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cached? 4": {
      "main": [
        [
          {
            "node": "List Exams",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Load Data 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cached? 5": {
      "main": [
        [
          {
            "node": "Details Exam",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Data 1": {
      "main": [
        [
          {
            "node": "Filter by 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format 1": {
      "main": [
        [
          {
            "node": "Set Cache 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format 3": {
      "main": [
        [
          {
            "node": "Set Save 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format 2": {
      "main": [
        [
          {
            "node": "Set Cache 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Cache 2": {
      "main": [
        [
          {
            "node": "Filter by 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Cache 1": {
      "main": [
        [
          {
            "node": "Filter by 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Data 2": {
      "main": [
        [
          {
            "node": "Filter by 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Save 3": {
      "main": [
        [
          {
            "node": "Filter by 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Data 3": {
      "main": [
        [
          {
            "node": "Filter by 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hidden Fields 4": {
      "main": [
        [
          {
            "node": "Filter by 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format 4": {
      "main": [
        [
          {
            "node": "Set Save 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Save 4": {
      "main": [
        [
          {
            "node": "Hidden Fields 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Save 5": {
      "main": [
        [
          {
            "node": "Response 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format 5": {
      "main": [
        [
          {
            "node": "Set Save 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load Data 4": {
      "main": [
        [
          {
            "node": "Hidden Fields 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter by 1": {
      "main": [
        [
          {
            "node": "Response 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter by 2": {
      "main": [
        [
          {
            "node": "Response 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter by 3": {
      "main": [
        [
          {
            "node": "Response 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter by 4": {
      "main": [
        [
          {
            "node": "Response 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "baseInfo": {
      "main": [
        [
          {
            "node": "Request to Tool?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Health Plans": {
      "main": [
        [
          {
            "node": "Not found? ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Payments": {
      "main": [
        [
          {
            "node": "Not found? 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Exams": {
      "main": [
        [
          {
            "node": "Not found? 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Details Exam": {
      "main": [
        [
          {
            "node": "Not found? 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Tool": {
      "main": [
        [
          {
            "node": "Get Health Plans",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Specialists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Payments",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Exams",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Details Exam",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Specialists": {
      "main": [
        [
          {
            "node": "Not found? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not found? 2": {
      "main": [
        [
          {
            "node": "Response Error  2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not found? 3": {
      "main": [
        [
          {
            "node": "Response Error  3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not found? 4": {
      "main": [
        [
          {
            "node": "Response Error 4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format 4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not found? 5": {
      "main": [
        [
          {
            "node": "Response Error 5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format 5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not found? ": {
      "main": [
        [
          {
            "node": "Response Error  ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-20T23:14:48.268Z",
  "id": "pliyk2HChCR880pK",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Comp Clinica",
  "nodes": [
    {
      "parameters": {},
      "id": "a44788a7-6ba1-47e8-bcd8-eb59042ddd9e",
      "name": "EWT",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        1860,
        480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "3d3f5973-0888-4a4a-9b95-74a7908fcf4c",
              "leftValue": "={{ $json.agent }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e074ef62-0377-4e8f-b986-6ddda5acea8c",
      "name": "Request to Tool?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2220,
        480
      ]
    },
    {
      "parameters": {
        "content": "## Specialists\nList with Professionals, Procedures\nand ID",
        "height": 360,
        "width": 1266.4586534267564,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3240,
        -260
      ],
      "id": "7b380290-a82f-47cb-bf69-89ea3a330379",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Exams\nList with Exams and ID",
        "height": 360,
        "width": 1420,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3240,
        580
      ],
      "id": "64f0a4b7-b254-44ec-949a-64c2263a1693",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_exams",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3280,
        760
      ],
      "id": "85532383-6808-4369-a5bc-cb9581bf3cef",
      "name": "Get Exams",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Details Exam\nInformations about a Exam",
        "height": 360,
        "width": 1140.9918728790954,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3240,
        1000
      ],
      "id": "f0db02ac-8c08-4c14-bb0f-dbcc092fb716",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_exam_detail_{{ $('EWT').item.json.query.exam_id }}",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3280,
        1140
      ],
      "id": "a70b4df2-8129-4f13-8a2b-ccb3616a59e1",
      "name": "Get Details Exam",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_specialists",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3280,
        -140
      ],
      "id": "b7d28bd1-f587-4a8d-8484-fc4bb80869a3",
      "name": "Get Specialists",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "content": "## Payments\nList Payment Methods",
        "height": 360,
        "width": 1272.416101573684,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3240,
        160
      ],
      "id": "73b4973d-9414-40b2-8d98-a921ff2f304e",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_payments",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3280,
        280
      ],
      "id": "29e7c939-ea21-4a18-9405-7587bc51b947",
      "name": "Get Payments",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "content": "## Health Plans",
        "height": 381.01112150694547,
        "width": 1266.7623508673068
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3240,
        -698.7043335247513
      ],
      "id": "b213268b-f39b-4683-bae8-cdc68e2ed568",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "data",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_health_plans",
        "keyType": "string",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3280,
        -580
      ],
      "id": "5cc6895e-6cc3-46d9-ac56-c93ee69afed2",
      "name": "Get Health Plans",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08781159-d933-43ce-8f8d-c043d0501403",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3420,
        280
      ],
      "id": "f64b1658-afd5-4b32-b0c7-3a684d46e7a3",
      "name": "Cached? 3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08781159-d933-43ce-8f8d-c043d0501403",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3420,
        -140
      ],
      "id": "943af4e8-05cc-4113-8a1c-d6abe356a025",
      "name": "Cached? 2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08781159-d933-43ce-8f8d-c043d0501403",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3420,
        -580
      ],
      "id": "ce8ef4ea-a353-4d4d-9a66-a1fae25c45d2",
      "name": "Cached? 1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08781159-d933-43ce-8f8d-c043d0501403",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3420,
        760
      ],
      "id": "e808e226-347c-4324-82de-0046c7ab20a0",
      "name": "Cached? 4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "08781159-d933-43ce-8f8d-c043d0501403",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3420,
        1140
      ],
      "id": "aaeb8295-d253-4339-8f22-e5fd6241953f",
      "name": "Cached? 5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27078474-0533-4004-8718-c55a54a5e46c",
              "name": "data",
              "value": "={{ $json.data.length ? $json.data.parseJson() : '' }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3580,
        -480
      ],
      "id": "c9738ebe-c686-4032-a641-ddd312edf7c8",
      "name": "Load Data 1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4575c98b-78f6-4829-be2c-e70d30cea179",
              "name": "data",
              "value": "={{ $json.data.compact().map(item => { return {\n  plan: item.title,\n  accept: item.accept ? 'yes' : 'no'\n} }) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3900,
        -580
      ],
      "id": "b569658b-d45f-4362-9a4a-7eec0f7a69de",
      "name": "Format 1",
      "notes": "{{ $json.data.compact().map(item => { return {\n  plan: item.title,\n  accept: item.accept ? 'yes' : 'no'\n} }) }}"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5e79ee57-938d-43a1-b3d4-084472693f30",
              "name": "response",
              "value": "={{\n    [\n        $json.data.filter(item => item.accept == 'yes').length > 0 \n            ? `We accept health insurance plans: ${$json.data.filter(item => item.accept == 'yes').map(item => `${item.plan}`).join(', ')}.`\n            : '',\n        $json.data.filter(item => item.accept == 'no').length > 0 \n            ? `We do not accept health insurance plans: ${$json.data.filter(item => item.accept == 'no').map(item => `${item.plan}`).join(', ')}.`\n            : ''\n    ].filter(section => section !== '').join('\\n\\n') \n}}",
              "type": "string"
            },
            {
              "id": "d627fd60-f2b4-4840-9e24-38dace9a13e6",
              "name": "response2",
              "value": "={{ $json.data.map(item => i = {item}).toJsonString() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8f5d71e9-f277-47e6-a5ef-09165b9f9e18",
      "name": "Response 1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4360,
        -480
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8d70ac3-ee0f-45ae-a0f8-cb0d54876bb3",
              "name": "data",
              "value": "={{ $json.data.map(item => {\n  return {\n  payment: item.title,\n  accept: item.accept ? 'yes' : 'no'\n  }\n}) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3920,
        260
      ],
      "id": "f781db03-f0ab-43f3-9e8f-3444dd3a8413",
      "name": "Format 3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8d70ac3-ee0f-45ae-a0f8-cb0d54876bb3",
              "name": "data",
              "value": "={{ $json.data.map(item => {\n  return {\n  professional: item.title,\n  procedure: item.procedure,\n  price: item.price,\n  crm: item.crm,\n  event_id: item.event_id,\n  id: item.id\n  }\n}) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3920,
        -160
      ],
      "id": "2d566f14-cfe4-4a95-89cb-92b2858b506a",
      "name": "Format 2"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_specialists",
        "value": "={{ $json.data.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 120
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4080,
        -160
      ],
      "id": "e2c3e1cb-2a03-4472-97f2-6419f79ee4dc",
      "name": "Set Cache 2",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_health_plans",
        "value": "={{ $json.data.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 120
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4060,
        -580
      ],
      "id": "9ead2e9a-b223-4308-9494-6fd209c934af",
      "name": "Set Cache 1",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5e79ee57-938d-43a1-b3d4-084472693f30",
              "name": "response",
              "value": "={{ \n    $json.data.map(item => `- ${item.professional}, ${item.procedure}${item.crm ? `, CRM ${item.crm}` : ''}, event ID ${item.event_id}${item.price ? `, price ${item.price}` : ''}`).join('\\n') \n}}",
              "type": "string"
            },
            {
              "id": "d627fd60-f2b4-4840-9e24-38dace9a13e6",
              "name": "response2",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bc3f74e2-ea6e-43b4-ac0a-d7d63a6e592e",
      "name": "Response 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4360,
        -60
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27078474-0533-4004-8718-c55a54a5e46c",
              "name": "data",
              "value": "={{ $json.data.length ? $json.data.parseJson() : '' }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3580,
        -60
      ],
      "id": "d96fd12d-6275-496c-bbf3-0c0caa4d83ca",
      "name": "Load Data 2"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_payments",
        "value": "={{ $json.data.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 120
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4080,
        260
      ],
      "id": "485313f7-023d-4bbc-8f7f-59493091e69b",
      "name": "Set Save 3",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5e79ee57-938d-43a1-b3d4-084472693f30",
              "name": "response",
              "value": "={{\n    [\n        $json.data.filter(item => item.accept == 'yes').length > 0 \n            ? `We accept payments: ${$json.data.filter(item => item.accept == 'yes').map(item => `${item.payment}`).join(', ')}.`\n            : '',\n        $json.data.filter(item => item.accept == 'no').length > 0 \n            ? `We do not accept payments: ${$json.data.filter(item => item.accept == 'no').map(item => `${item.payment}`).join(', ')}.`\n            : ''\n    ].filter(section => section !== '').join('\\n\\n') \n}}",
              "type": "string"
            },
            {
              "id": "d627fd60-f2b4-4840-9e24-38dace9a13e6",
              "name": "response2",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b0bb925b-b036-442b-8137-fd2eb07d61d7",
      "name": "Response 3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4360,
        360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27078474-0533-4004-8718-c55a54a5e46c",
              "name": "data",
              "value": "={{ $json.data.length ? $json.data.parseJson() : '' }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3580,
        360
      ],
      "id": "1331f3f5-d606-436b-b638-ac9ea6bd5e72",
      "name": "Load Data 3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "=exam not found with id {{ $('EWT').first().json.query.exam_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0ed169b8-70a1-4506-93e4-e6afc9d86d75",
      "name": "Response Error 4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response2",
              "value": "={{ $json.data }}",
              "type": "string"
            },
            {
              "id": "df2665f5-f799-449c-bce5-3758bc793f6c",
              "name": "response",
              "value": "={{ \n    $json.data.map(item => `- ${item.title}, event ID ${item.event_id} and exam ID ${item.id}`).join('\\n') \n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8558fafa-1224-4937-9e96-0908757d6f8f",
      "name": "Response 4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4500,
        780
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa4592b8-cc3a-48e9-8a39-a78ae2d3ad12",
              "name": "data",
              "value": "={{ \n    $('EWT').item.json.hasField('hidden_fields') && $('EWT').item.json.hidden_fields.length \n        ? $json.data.map(item => {\n            $('EWT').item.json.hidden_fields.forEach(field => {\n                delete item[field];\n            });\n            return item;\n          })\n        : $json.data \n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        780
      ],
      "id": "44f25ffb-efc5-450d-b52c-41d98a73c893",
      "name": "Hidden Fields 4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8d70ac3-ee0f-45ae-a0f8-cb0d54876bb3",
              "name": "data",
              "value": "={{ $json.data.map(item => i = {\n  id: item.id,\n  title: item.title,\n  event_id: item.event_id,\n}) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3920,
        680
      ],
      "id": "7bb88368-9c1b-49ae-90c3-dbecc75ccf79",
      "name": "Format 4"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_exams",
        "value": "={{ $json.data.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 120
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4080,
        680
      ],
      "id": "92a81d93-0c57-4b4a-accf-e36b8450e8b5",
      "name": "Set Save 4",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "=exam not found with id {{ $('EWT').first().json.query.exam_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f636c62d-33c8-4832-97eb-0644986641da",
      "name": "Response Error 5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        1020
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('EWT').item.json.messageInfo.instance }}_{{ $workflow.id\n}}_exam_detail_{{ $('EWT').item.json.query.exam_id }}",
        "value": "={{ $json.data.toJsonString() }}",
        "keyType": "string",
        "expire": true,
        "ttl": 120
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4080,
        1100
      ],
      "id": "329d319d-cec4-441b-afc9-088307e92040",
      "name": "Set Save 5",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8d70ac3-ee0f-45ae-a0f8-cb0d54876bb3",
              "name": "data",
              "value": "={{ $json.data.removeField('created_at') }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3920,
        1100
      ],
      "id": "c3a3a38b-155a-44f1-8577-5e3f185d7a10",
      "name": "Format 5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "={{ $json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e8fc6965-1dae-40b0-ac60-1862f12d904a",
      "name": "Response 5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        1200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27078474-0533-4004-8718-c55a54a5e46c",
              "name": "data",
              "value": "={{ $json.data.length ? $json.data.parseJson() : '' }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3560,
        780
      ],
      "id": "7c743b0e-702f-4f5e-af7c-efa54e8c6e34",
      "name": "Load Data 4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa4592b8-cc3a-48e9-8a39-a78ae2d3ad12",
              "name": "data",
              "value": "={{ \n    (() => {\n        const query = $('EWT').item.json.query;\n        const filters = [\n            item => query.name ? item.plan.toLowerCase().includes(query.name.toLowerCase()) : true,\n        ];\n\n        const filteredData = $json.data.filter(item => filters.every(fn => fn(item)));\n        return filteredData.length ? filteredData : $json.data;\n    })()\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        -480
      ],
      "id": "25b0a4ec-b104-498d-8544-c73c745ebd4e",
      "name": "Filter by 1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa4592b8-cc3a-48e9-8a39-a78ae2d3ad12",
              "name": "data",
              "value": "={{ \n    (() => {\n        const query = $('EWT').item.json.query;\n        const filters = [\n            item => query.crm ? item.crm == query.crm : true,\n            item => query.name ? item.professional.toLowerCase().includes(query.name.toLowerCase()) : true,\n            item => query.specialist ? item.procedure.toLowerCase().includes(query.specialist.toLowerCase()) : true,\n        ];\n\n        const filteredData = $json.data.filter(item => filters.every(fn => fn(item)));\n        return filteredData.length ? filteredData : $json.data;\n    })()\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        -60
      ],
      "id": "036c6851-b591-4d8d-b563-062e2cd7d99a",
      "name": "Filter by 2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa4592b8-cc3a-48e9-8a39-a78ae2d3ad12",
              "name": "data",
              "value": "={{ \n    (() => {\n        const query = $('EWT').item.json.query;\n        const filters = [\n            item => query.name ? item.payment.toLowerCase().includes(query.name.toLowerCase()) : true,\n        ];\n\n        const filteredData = $json.data.filter(item => filters.every(fn => fn(item)));\n        return filteredData.length ? filteredData : $json.data;\n    })()\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        360
      ],
      "id": "3c73434f-ba42-4b09-ac4e-958dcc57844c",
      "name": "Filter by 3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa4592b8-cc3a-48e9-8a39-a78ae2d3ad12",
              "name": "data",
              "value": "={{ \n    (() => {\n        const query = $('EWT').item.json.query;\n        const filters = [\n            item => query.name ? item.title.toLowerCase().includes(query.name.toLowerCase()) : true,\n        ];\n\n        const filteredData = $json.data.filter(item => filters.every(fn => fn(item)));\n        return filteredData.length ? filteredData : $json.data;\n    })()\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4360,
        780
      ],
      "id": "e5729267-7f67-4482-8efc-f76583406d3b",
      "name": "Filter by 4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c5e68ae0-e5c0-4770-91f9-3d9e67965ef8",
              "name": "url_api",
              "value": "https://agendaclinic.com/api/v1",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fc44cecd-cd13-4f7e-82f3-5e0d86801ddf",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2040,
        480
      ]
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/health-plans",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "dbf53399-d3bc-4da5-ba6e-58f0021224b7",
      "name": "List Health Plans",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3580,
        -660
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/specialists",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "b09384c0-10c5-44a2-81bd-ff7e1bbb9fe9",
      "name": "List Specialists",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3580,
        -220
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/payment-methods",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "1f894dc4-c1fe-4344-adfe-7019c505d40e",
      "name": "List Payments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3580,
        200
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/exams",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "4b5e732f-c33f-4044-89d4-1915be48b4fa",
      "name": "List Exams",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3560,
        620
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.url_api }}/exams/{{ $('EWT').item.json.query.exam_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "3557e468-8059-42e0-b8e6-ef3575bf13d2",
      "name": "Details Exam",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3580,
        1040
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "nmUmytqX7rLnklTQ",
          "name": "AI Clinic Token"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('EWT').item.json.tool }}",
                    "rightValue": "health plans",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "health plans"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5ece5fd9-4267-4bf2-a1b7-23b5d1c2362f",
                    "leftValue": "={{ $('EWT').item.json.tool }}",
                    "rightValue": "specialists",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Procedures"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "42639684-02d9-4a30-96b2-cf1cb1df7b74",
                    "leftValue": "={{ $('EWT').item.json.tool }}",
                    "rightValue": "payments",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "payments"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "82cfd93c-100b-4167-a74a-97be2345ff5e",
                    "leftValue": "={{ $('EWT').item.json.tool }}",
                    "rightValue": "exams",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "exams"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "842d1b7b-1008-4d19-b983-c6cab57bb716",
                    "leftValue": "={{ $('EWT').item.json.tool }}",
                    "rightValue": "exam details",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "exam details"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9b5f5609-379c-4f48-acb1-f823cf989818",
                    "leftValue": "={{ $('EWT').item.json.tool }}",
                    "rightValue": "calendar details",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "calendar details"
            }
          ]
        },
        "options": {}
      },
      "id": "0c2b1d20-14eb-4d9a-85ce-ec668caf8aa9",
      "name": "Switch Tool",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2420,
        440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "=payment methods not found",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "51b84bd6-a89b-49b9-bab2-80d8e05c443e",
      "name": "Response Error  3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "=payment methods not found",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "341cdca4-b94b-40c3-afb8-266e2990bf3e",
      "name": "Response Error  2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        -240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fb6571d7-b6a3-490b-bc53-0c463c4981bd",
              "leftValue": "={{ $json.data.isEmpty() }}",
              "rightValue": 0,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        -220
      ],
      "id": "ce038637-a8b9-422f-8c69-29b06739bee1",
      "name": "Not found? 2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fb6571d7-b6a3-490b-bc53-0c463c4981bd",
              "leftValue": "={{ $json.data.isEmpty() }}",
              "rightValue": 0,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        200
      ],
      "id": "6a2607f2-f038-45c0-bfac-d5f0db75f448",
      "name": "Not found? 3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fb6571d7-b6a3-490b-bc53-0c463c4981bd",
              "leftValue": "={{ $json.data.isEmpty() }}",
              "rightValue": 0,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3700,
        620
      ],
      "id": "dceda59c-5e83-43f8-b2a0-ee7d9ce4f437",
      "name": "Not found? 4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fb6571d7-b6a3-490b-bc53-0c463c4981bd",
              "leftValue": "={{ $json.data.isEmpty() }}",
              "rightValue": 0,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        1040
      ],
      "id": "55fcda0e-6563-4bca-b682-e8ec4df80a71",
      "name": "Not found? 5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fb6571d7-b6a3-490b-bc53-0c463c4981bd",
              "leftValue": "={{ $json.data.isEmpty() }}",
              "rightValue": 0,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3720,
        -660
      ],
      "id": "1166da8f-2a52-4a02-a77e-ac9f18394a33",
      "name": "Not found? "
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b49db797-0bdf-457d-8ba0-e7cf175881e5",
              "name": "response",
              "value": "=health plans not found",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f0ed5d31-e3e6-4a5a-a7b1-5b675dba4a62",
      "name": "Response Error  ",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4220,
        -680
      ]
    }
  ],
  "pinData": {
    "EWT": [
      {
        "json": {
          "query": "Hemograma Completo",
          "tool": "exams",
          "messageInfo": {
            "evo_api": "https://apiwp.wmst.com.br",
            "instance": "ibox_cli_23",
            "remoteJid": "5512982184879@s.whatsapp.net",
            "pushName": "W.M. Soluções Tecnologicas",
            "fromMe": false,
            "unique_id": "william_5512982184879",
            "debounce_time": 5,
            "conversation": "williamkillerca@hotmail.com"
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    },
    {
      "createdAt": "2024-10-30T23:31:05.255Z",
      "updatedAt": "2024-10-30T23:31:05.255Z",
      "id": "IDsda42rHm8bi7eR",
      "name": "Tool"
    },
    {
      "createdAt": "2024-12-18T13:55:11.434Z",
      "updatedAt": "2024-12-18T13:55:11.434Z",
      "id": "02kkCHve480aFjG4",
      "name": "Clinic"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-01-08T22:45:11.028Z",
  "versionId": "21bf1a75-48de-432a-8467-2ff9c1ac05ce"
}