{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-17T00:02:18.899Z",
  "id": "WLprMyaqZr5ITyHY",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup Coolify to Google Drive",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 20,
              "triggerAtMinute": 10
            }
          ]
        }
      },
      "id": "0bcb5d97-0bad-4c1e-a57d-ccdb2be94878",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        840,
        440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://browserless.aspworkplace.com/download",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "31a645e3-8903-4aae-8e9e-7854174259de"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "cookie",
              "value": "browserless_token=31a645e3-8903-4aae-8e9e-7854174259de;"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/javascript",
        "body": "=module.exports = async function run({ page, context }) {\n  try {\n    await page.setViewport({ width: 1920, height: 953, deviceScaleFactor: 1, isMobile: false, hasTouch: false, isLandscape: false });\n    await page.goto(\"https://coolify.aspworkplace.com/login\");\n    await page.waitForSelector(\"input[type=\\\"email\\\"]\");\n    await page.click(\"input[type=\\\"email\\\"]\");\n    await page.type(\"input[type=\\\"email\\\"]\", \"automatestpete@gmail.com\");\n    await page.waitForSelector(\"input[type=\\\"password\\\"]\");\n    await page.click(\"input[type=\\\"password\\\"]\");\n    await page.type(\"input[type=\\\"password\\\"]\", \"##Coolify727..\");\n    await Promise.all([page.waitForNavigation(), page.keyboard.press(\"Enter\")]);\n    await page.waitForTimeout(3000);\n    const loginSuccess = await page.waitForFunction(() => document.title.includes(\"Dashboard\"), { timeout: 10000 }).catch(() => false);\n    \n    if (loginSuccess) {\n      await page.goto(\"https://coolify.aspworkplace.com/settings/backup\");\n      \n      // Wait for any content to load\n      await page.waitForSelector(\"body\");\n      \n      // Use JavaScript to find and click the specific button\n      await page.evaluate(() => {\n        const buttons = Array.from(document.querySelectorAll(\"button\"));\n        const downloadButton = buttons.find(button => \n          button.textContent.includes(\"Download\") && \n          button.closest(\"div.py-4\") && \n          button.closest(\"div.flex.flex-col.gap-4\")\n        );\n        if (downloadButton) {\n          downloadButton.click();\n        } else {\n          throw new Error(\"Download button not found\");\n        }\n      });\n      \n      // Wait for the download to complete\n      await page.waitForTimeout(5000);  // Adjust this timeout as needed\n    } else {\n      throw new Error(\"Login verification failed\");\n    }\n  } catch (error) {\n    console.error(\"An error occurred:\", error);\n    throw error;  // Re-throw the error to signal that the download failed\n  }\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "f0196d28-7155-4bbb-88b0-17efde2769f4",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1060,
        440
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-10-17T01:00:07.000Z",
  "versionId": "dab24d80-d256-49ef-ad89-4d28bad82693"
}