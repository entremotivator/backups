{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Go on url",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Go on url1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Go on url2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Go on url3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Inject Cookie",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Refresh browser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "If Block1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If Block",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields (For testing prupose )",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Block": {
      "main": [
        [
          {
            "node": "Delete Session1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Go on url": {
      "main": [
        [
          {
            "node": "Get ScreenShot 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Block1": {
      "main": [
        [
          {
            "node": "Delete Session2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Go on url1": {
      "main": [
        [
          {
            "node": "Get ScreenShot 1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Go on url2": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Go on url3": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Target Url": {
      "main": [
        [
          {
            "node": "Google search Query ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Selenium Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inject Cookie": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session": {
      "main": [
        [
          {
            "node": "Information Extractor1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session1": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session2": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session3": {
      "main": [
        [
          {
            "node": "Information Extractor2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session4": {
      "main": [
        [
          {
            "node": "Error1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session5": {
      "main": [
        [
          {
            "node": "Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session6": {
      "main": [
        [
          {
            "node": "Error3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Session7": {
      "main": [
        [
          {
            "node": "Error2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get ScreenShot ": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Refresh browser": {
      "main": [
        [
          {
            "node": "Get ScreenShot ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Webdriver ": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get ScreenShot 1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get ScreenShot 2": {
      "main": [
        [
          {
            "node": "Convert to File2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Go on ip-api.com": {
      "main": [
        [
          {
            "node": "Get ScreenShot 2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Check if empty of NA": {
      "main": [
        [
          {
            "node": "Error can't find url",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Selenium Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google search Query ": {
      "main": [
        [
          {
            "node": "Extract First Url Match",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Check if empty of NA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resize browser window": {
      "main": [
        [
          {
            "node": "Clean Webdriver ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor1": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor2": {
      "main": [
        [
          {
            "node": "Success with cookie",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Selenium Session": {
      "main": [
        [
          {
            "node": "Resize browser window",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Session7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract First Url Match": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields (For testing prupose )": {
      "main": [
        [
          {
            "node": "If Target Url",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-18T03:44:18.762Z",
  "id": "61yMfLL4JZXOqeJu",
  "meta": null,
  "name": "Ultimate scraper",
  "nodes": [
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "Url Find ",
              "cssSelector": "=a[href*=\"https://\"][href*=\"{{ $('Edit Fields (For testing prupose )').item.json['Website Domaine'] }}\"]\n",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "id": "5a063bb7-7a63-4bcc-ae6c-3970f9eed46d",
      "name": "Extract First Url Match",
      "type": "n8n-nodes-base.html",
      "position": [
        900,
        1580
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "c3c3e976-e22a-42aa-9c07-8786b6781611",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1140,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/execute/sync",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"script\": \"Object.defineProperty(navigator, 'webdriver', { get: () => undefined }); window.navigator.chrome = { runtime: {} }; Object.defineProperty(navigator, 'languages', { get: () => ['en-US', 'en'] }); Object.defineProperty(navigator, 'plugins', { get: () => [1, 2, 3, 4, 5] });\",\n  \"args\": []\n}\n",
        "options": {}
      },
      "id": "9656e0f4-09d1-41c4-b0c6-27f550599606",
      "name": "Clean Webdriver ",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2200,
        1600
      ],
      "notesInFlow": false,
      "typeVersion": 4.2,
      "notes": "Script to delete traces of selenium in the browser "
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "8e472e3b-e414-45f8-9e4b-3bbdfef8674c",
      "name": "Delete Session",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4260,
        1960
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "ad16540e-ce25-47a2-adf2-044e30e8d6e7",
      "name": "Delete Session2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5820,
        880
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e6e6e15d-1cfe-48be-8ea0-f112e9781c9d",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": "BLOCK"
            }
          ]
        },
        "options": {}
      },
      "id": "0d12023f-fd9f-42a4-859b-d67458220fb9",
      "name": "If Block1",
      "type": "n8n-nodes-base.if",
      "position": [
        5600,
        1020
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "e8fd7af8-cb49-4179-b5ed-77fff2eaaab9",
      "name": "Delete Session3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5820,
        1100
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {},
      "id": "3e8f7799-6e99-4c06-bded-334aa8a7a514",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "position": [
        4200,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "46e62fe1-1922-4b85-9fab-309c4a8fdb56",
      "name": "Delete Session1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4260,
        1760
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "5993de17-ba8d-4f38-9bfb-6912d752a9c6",
      "name": "Delete Session4",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4860,
        1300
      ],
      "retryOnFail": false,
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "options": {
          "responseCode": 200
        }
      },
      "id": "e9f761be-0371-4263-84ac-3171723050b3",
      "name": "Success with cookie",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        6340,
        1100
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"Success \": \"Request has been block by the targeted website\"\n}",
        "options": {
          "responseCode": 200
        }
      },
      "id": "5a2a7a5e-3ca0-4ae3-b034-0190e834b0c0",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        6000,
        880
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "jsCode": "// Récupère les données du nœud Webhook (en remplaçant \"Webhook\" par le nom du nœud Webhook dans votre workflow)\nconst webhookData = $node[\"Webhook\"].json;\n\n// Fonction pour convertir la valeur de sameSite\nfunction convertSameSite(value) {\n    // Conversion spécifique des valeurs de sameSite\n    const conversionMap = {\n        \"unspecified\": \"None\",\n        \"lax\": \"Lax\",\n        \"strict\": \"Strict\"\n    };\n    \n    // Si la valeur existe dans le tableau de conversion, on la convertit\n    if (value in conversionMap) {\n        return conversionMap[value];\n    }\n    \n    // Si la valeur est déjà une des valeurs acceptées par Selenium\n    const allowedValues = [\"Strict\", \"Lax\", \"None\"];\n    if (allowedValues.includes(value)) {\n        return value;\n    } else {\n        // Si la valeur n'est pas reconnue, on la remplace par \"Lax\" (par défaut)\n        return \"Lax\";\n    }\n}\n\n// Vérifiez et traitez les données des cookies\nif (webhookData.body && webhookData.body.cookies) {\n    let items = [];\n    for (const cookieObject of webhookData.body.cookies) {\n        if (cookieObject.cookie) {\n            // Convertir la valeur de sameSite\n            cookieObject.cookie.sameSite = convertSameSite(cookieObject.cookie.sameSite);\n            \n            // Ajouter le cookie à la liste des items\n            items.push({\n                json: cookieObject.cookie\n            });\n        }\n    }\n    return items;\n}\n\n// Si les cookies ne sont pas trouvés, renvoyer un tableau vide\nreturn [];\n"
      },
      "id": "e37296ae-2348-4995-beeb-1cf536d6de33",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        3780,
        940
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "24d38990-15a7-40ce-adc4-f9ec82f11072",
      "name": "Delete Session5",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3020,
        1400
      ],
      "retryOnFail": false,
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"Error\": \"Cookies are note for the targeted url\"\n}",
        "options": {
          "responseCode": 404
        }
      },
      "id": "d14e437a-a01e-4112-ada3-3622cc835b1c",
      "name": "Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        3200,
        1400
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {
          "responseCode": 500
        }
      },
      "id": "a9f16f95-d43e-420a-91bd-825f188732fd",
      "name": "Error1",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        5080,
        1300
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {
          "responseCode": 500
        }
      },
      "id": "03319aea-455b-4a62-8ee7-14ee276e4dbc",
      "name": "Error2",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        2140,
        1820
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "1bffbc80-9913-46e7-a594-ebc26948c83b",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $('Webhook').item.json.body.cookies[0].cookie.domain }}",
              "rightValue": "={{ $('Webhook').item.json.body.Url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "868589e7-98f5-4e1f-81f7-2fa99c25cd1a",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        2840,
        1240
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/cookie",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"cookie\": {\n    \"name\": \"{{ $json.name }}\",\n    \"value\": \"{{ $json.value }}\",\n    \"domain\": \"{{ $json.domain }}\",\n    \"path\": \"{{ $json.path }}\",\n    \"secure\": {{ $json.secure }},\n    \"httpOnly\": {{ $json.httpOnly }},\n    \"sameSite\": \"{{ $json.sameSite }}\",\n    \"expirationDate\": {{ $json.expirationDate }}\n  }\n}",
        "options": {}
      },
      "id": "ca9ce8d1-0c76-40f4-bb8c-0c58e555d956",
      "name": "Inject Cookie",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3980,
        940
      ],
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"Success \": \"Request has been block by the targeted website\"\n}",
        "options": {
          "responseCode": 200
        }
      },
      "id": "1ef6dfbc-3187-4c4f-9b74-75ba86b85e07",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        4480,
        1760
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {
          "responseCode": 200,
          "responseKey": "={{ $json.output }}"
        }
      },
      "id": "b3c6e4fc-fafa-401e-baae-f24bcc15d0e8",
      "name": "Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        4820,
        1960
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/url",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $('Webhook').item.json.body['Target Url'] }}\"\n}\n",
        "options": {}
      },
      "id": "48b6585a-5029-4fe9-9a37-2ea6b07bc201",
      "name": "Go on url",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2980,
        1820
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "388a48dc-bb13-4b85-951e-02026464fd6c",
      "name": "Delete Session6",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3440,
        2240
      ],
      "retryOnFail": false,
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"Error\": \"Page crash on the extracted url\"\n}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "a822b65f-347f-4823-92ff-51dac79f276f",
      "name": "Error3",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        3600,
        2240
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "text": "={{ $json['Url Find '][1] }}{{ $json['Url Find '][2] }}{{ $json['Url Find '][3] }}",
        "attributes": {
          "attributes": [
            {
              "name": "Good_url_for_etract_information",
              "description": "=The url where I can extract relevant infroamtion on this subject : {{ $('Edit Fields (For testing prupose )').item.json.Subject }} on this domaine name : {{ $('Edit Fields (For testing prupose )').item.json['Website Domaine'] }}",
              "required": true
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=You are an expert extraction algorithm.\nOnly extract relevant url from the unstructured urls array.\nA relevant url is a url whre you can find relevant information about this subject : {{ $('Edit Fields (For testing prupose )').item.json.Subject }}, on this domaine name : {{ $('Edit Fields (For testing prupose )').item.json['Website Domaine'] }}.\nIf you do not know the value of an attribute asked to extract, you need \\ attribute's value as NA."
        }
      },
      "id": "e1e3ec67-83cb-42dd-97f9-763a374d2782",
      "name": "Information Extractor",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        1120,
        1580
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "9470fb6c-e367-4af7-a697-275e724fe771",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.output.Good_url_for_etract_information }}",
              "rightValue": ""
            },
            {
              "id": "8518e9a9-5b0c-4699-97c5-d9b7b1943918",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.output.Good_url_for_etract_information }}",
              "rightValue": "NA"
            }
          ]
        },
        "options": {}
      },
      "id": "00d8a07f-adb7-45a9-92d1-b6e3139f3ece",
      "name": "Check if empty of NA",
      "type": "n8n-nodes-base.if",
      "position": [
        1520,
        1580
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e6e6e15d-1cfe-48be-8ea0-f112e9781c9d",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": "BLOCK"
            }
          ]
        },
        "options": {}
      },
      "id": "02db6f88-7889-4d39-b93d-d9cfc31752cc",
      "name": "If Block",
      "type": "n8n-nodes-base.if",
      "position": [
        4040,
        1880
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "url": "=https://www.google.com/search?q=site:{{ $json['Website Domaine'] }}+{{$json.Subject}}&oq=site&gs_lcrp=EgZjaHJvbWUqCAgAEEUYJxg7MggIABBFGCcYOzIICAEQRRgnGDsyBggCEEUYOzIRCAMQRRg5GEMYyQMYgAQYigUyBggEEEUYQDIGCAUQRRg9MgYIBhBFGD0yBggHEEUYPdIBCDEwNTRqMGo3qAIAsAIA&sourceid=chrome&ie=UTF-8",
        "options": {}
      },
      "id": "6fddfca5-5d78-4605-aca7-662ced688440",
      "name": "Google search Query ",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        680,
        1580
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://selenium_chrome:4444/wd/hub/session",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"capabilities\": {\n    \"alwaysMatch\": {\n      \"browserName\": \"chrome\",\n      \"goog:chromeOptions\": {\n        \"args\": [  \n          \"--disable-blink-features=AutomationControlled\",\n          \"--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\"\n        ]\n      }\n    }\n  }\n}\n",
        "options": {
          "timeout": 5000
        }
      },
      "id": "e49a4036-cea1-4aac-8c0a-1dd863be28e8",
      "name": "Create Selenium Session",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1760,
        1680
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/screenshot",
        "options": {}
      },
      "id": "985ba6f4-da1b-4ed3-9894-5b7bf1af54e6",
      "name": "Get ScreenShot 1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3500,
        1880
      ],
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http:///selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/refresh",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{}",
        "options": {}
      },
      "id": "29752dcd-5411-4588-bda2-1d314416af02",
      "name": "Refresh browser",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4400,
        940
      ],
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/screenshot",
        "options": {}
      },
      "id": "9d0882a2-bdea-43f4-ba45-2ba2cf0d048c",
      "name": "Get ScreenShot ",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4960,
        1020
      ],
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "value",
        "options": {}
      },
      "id": "26d16627-a4b2-470f-93d5-8e4ed1d780b1",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        5240,
        1020
      ],
      "typeVersion": 1.1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "value",
        "options": {}
      },
      "id": "9786b781-58ac-4468-891a-e849ab479a17",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        3680,
        1880
      ],
      "typeVersion": 1.1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "c9a3d905-cc91-4f7b-aff8-962cde4745f8",
      "name": "Delete Session7",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2000,
        1820
      ],
      "retryOnFail": false,
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## N8N Ultimate Scraper - Workflow\n\nThis workflow's objective is to collect data from any website page, whether it requires login or not.\n\nFor example, you can collect the number of stars of the n8n-ultimate-scraper project on GitHub.\n\n## Requirements\n**Selenium Container**: Selenium is an open-source automation framework for web applications, enabling browser control and interaction through scripts in various programming languages.\nYou can deploy the Docker Compose file from the associated GitHub project to set up your Selenium container and configuration: https://github.com/Touxan/n8n-ultimate-scraper\n\n**Residential Proxy Server**: To scrape data at scale without being blocked, I personally recommend GeoNode. They offer affordable, high-quality residential proxies: https://geonode.com/invite/98895\n\n**OpenAI API Key**: For using GPT-4.\n\n## Optional\nSession Cookies Collection: To use login functionality with the n8n Ultimate Scraper, you need to collect session cookies from the target website. You can do this using the extension created for this application in the GitHub project: https://github.com/Touxan/n8n-ultimate-scraper. Follow the installation procedure to use it.\n\n## How to use \nDeploy the project with all the requiremnts and request your webhook.\n\n**Example of request**:\ncurl -X POST http://localhost:5678/webhook-test/yourwebhookid \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"subject\": \"Hugging Face\",\n  \"Url\": \"github.com\",\n  \"Target data\": [\n    {\n      \"DataName\": \"Followers\",\n      \"description\": \"The number of followers of the GitHub page\"\n    },\n    {\n      \"DataName\": \"Total Stars\",\n      \"description\": \"The total numbers of stars on the different repos\"\n    }\n  ],\n  \"cookies\": []\n}'\n\nYou can also scrape link like this : \ncurl -X POST http://localhost:5678/webhook-test/67d77918-2d5b-48c1-ae73-2004b32125f0 \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"Target Url\": \"https://github.com\",\n  \"Target data\": [\n    {\n      \"DataName\": \"Followers\",\n      \"description\": \"The number of followers of the GitHub page\"\n    },\n    {\n      \"DataName\": \"Total Stars\",\n      \"description\": \"The total numbers of stars on the different repo\"\n    }\n]\n}'\n\n**Note**\nThe maximum nimber of Target data is 5.",
        "height": 1333.3079943516484,
        "width": 851.2111300888805,
        "color": 4
      },
      "id": "9db9afcb-429c-4505-9df3-7a42ca7c7ce6",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3895040f-0a21-47ee-a73f-d3c7fd6edf36",
              "name": "Subject",
              "type": "string",
              "value": "={{ $json.body.subject }}"
            },
            {
              "id": "304e4240-513f-4c87-ae9d-4efda7d0c4ab",
              "name": "Website Domaine",
              "type": "string",
              "value": "={{ $json.body.Url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "47e9b591-9db4-43a9-a32c-f57a02c6b7da",
      "name": "Edit Fields (For testing prupose )",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        1580
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/screenshot",
        "options": {}
      },
      "id": "1c68ca33-ab7a-4e1e-bc8b-006c47bfaa07",
      "name": "Get ScreenShot 2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5280,
        1880
      ],
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "value",
        "options": {}
      },
      "id": "b9d33d56-6502-4807-8f2f-aed7545b5064",
      "name": "Convert to File2",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        5520,
        1880
      ],
      "typeVersion": 1.1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/url",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"https://ip-api.com/\"\n}\n",
        "options": {}
      },
      "id": "06f6f381-fe53-4677-82ff-9aa40e7c6d3c",
      "name": "Go on ip-api.com",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5040,
        1880
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}",
        "options": {}
      },
      "id": "61bfc0c0-e577-41e9-9a52-d5e34f455b05",
      "name": "Delete Session8",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        5520,
        2100
      ],
      "retryOnFail": false,
      "typeVersion": 4.2,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "content": "## Debug IP\n\nThis small debug flow aims to check the IP you're requesting with, in case you're using a proxy",
        "height": 520.0741248156677,
        "width": 784.9798841202522,
        "color": 6
      },
      "id": "18b482c3-4c53-49ac-976f-747d9b9ebf39",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5000,
        1760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Search\n\n**Description** :\nThis part aims to search on Google for the subject and find the URL of the subject page based on the input URL.",
        "height": 430.433007240277,
        "width": 751.8596006980003
      },
      "id": "d9074b84-6b27-478d-bc15-92e6dd308212",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        660,
        1460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"Error\": \"Can't find url\"\n}",
        "options": {
          "responseCode": 404
        }
      },
      "id": "03746913-821e-4dc4-956e-ad4d7aa15e5a",
      "name": "Error can't find url",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1880,
        1320
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "## Selenium Session\n\n**Description**:\nCreation and configuration of the Selenium session.",
        "height": 502.0185388323068,
        "width": 827.9448220213314
      },
      "id": "d4a6c3cb-6598-4a42-8d53-a9b07372cd08",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1500,
        1460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $json.value.sessionId }}/window/rect",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"width\": 1920,\n  \"height\": 1080,\n  \"x\": 0,\n  \"y\": 0\n}\n",
        "options": {}
      },
      "id": "47a4cb76-cc78-43da-bf21-d7a570fe4d1b",
      "name": "Resize browser window",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2000,
        1600
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "content": "## Scrape with cookies session\n\n**Description**\nThis part goes to the extracted URL, injects the cookies passed into the webhook, takes a screenshot of the webpage, and analyzes the image with GPT to extract the targeted data.",
        "height": 821.0847869745435,
        "width": 3939.555135735299
      },
      "id": "b337dc9c-b029-4532-aaee-5fbc53540319",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2580,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Scrape without cookies session\n\n**Description**\nSame as the 'Scrape with cookies session' flow, but without the cookie injection",
        "height": 821.0847869745435,
        "width": 3336.952424000919
      },
      "id": "8753b9ba-bbe1-4da3-ae1f-bdc924229be1",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2580,
        1620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o",
          "cachedResultName": "GPT-4O"
        },
        "text": "=Analyse this image and extract revlant infromation about this subject : {{ $('Webhook').item.json.body.subject }}. \n\nIf the webpage seem block by waf, or don't have any relant information about the subject reurn BLOCK with out any aditinonal information.",
        "inputType": "base64",
        "options": {
          "detail": "auto",
          "maxTokens": 300
        }
      },
      "id": "5a497474-c400-49d9-9bd8-db2e664f874b",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        5420,
        1020
      ],
      "typeVersion": 1.5
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o",
          "cachedResultName": "GPT-4O"
        },
        "text": "=Analyse this image and extract revlant infromation about this subject : {{ $('Webhook').item.json.body.subject }}. \n\nIf the webpage seem block by waf, or don't have any relant information about the subject reurn BLOCK with out any aditinonal information.",
        "inputType": "base64",
        "options": {
          "detail": "auto",
          "maxTokens": 300
        }
      },
      "id": "2b5a3ea8-a314-484b-a61e-0b15469348d3",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        3860,
        1880
      ],
      "typeVersion": 1.5,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "text": "={{ $('OpenAI1').item.json.content }}",
        "attributes": {
          "attributes": [
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][0].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][0].description }}"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][1].DataName }}",
              "description": "=The total number of stars on all project"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][2].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][2].description }}"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][3].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][3].description }}"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][4].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][4].description }}"
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, set the attribute's value to NA."
        }
      },
      "id": "91cc6ddb-edd1-44b1-9abd-76846bf8f508",
      "name": "Information Extractor1",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        4480,
        1960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0da2525d-e64a-4bef-94ae-dcb9ace193a6",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        4480,
        2180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "text": "={{ $('OpenAI').item.json.content }}",
        "attributes": {
          "attributes": [
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][0].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][0].description }}"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][1].DataName }}",
              "description": "=The total number of stars on all project"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][2].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][2].description }}"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][3].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][3].description }}"
            },
            {
              "name": "={{ $('Webhook').item.json.body['Target data'][4].DataName }}",
              "description": "={{ $('Webhook').item.json.body['Target data'][4].description }}"
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "You are an expert extraction algorithm.\nOnly extract relevant information from the text.\nIf you do not know the value of an attribute asked to extract, set the attribute's value to NA. If the attribute is empty you can omit it."
        }
      },
      "id": "d8c4fbd2-bf26-40fa-bf63-72ec61192d11",
      "name": "Information Extractor2",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "position": [
        6000,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b1e14ee8-8b2a-4c95-b68e-bf945041251d",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        6020,
        1260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Proxy\n\n**Configuration**\n\nTo configure your proxy with the project, follow the instructions on the GitHub project: https://github.com/Touxan/n8n-ultimate-scraper. To configure the docker-compose, you also need to add this argument to the 'Create Selenium Session' node : --proxy-server=address:port.\n\n### ⚠️Warning⚠️\n Selenium does not support proxy authentication, so you need to add your server IP to the proxy whitelist. On GeoNode, it's here: https://app.geonode.com/whitelist-ip!",
        "height": 507.4126722815008,
        "width": 813.0685668942513,
        "color": 3
      },
      "id": "4956f4f5-dd98-4a13-9a79-451aa38de4bb",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        900,
        360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "67d77918-2d5b-48c1-ae73-2004b32125f0",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f127d3f8-163c-4017-a17a-de707122913c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        20,
        1580
      ],
      "webhookId": "67d77918-2d5b-48c1-ae73-2004b32125f0",
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "4b608dcd-a175-4019-82c2-560320a2abce",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $('Webhook').item.json.body['Target Url'] }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "f4a88dff-92d2-4d35-baf2-4d1044953e8e",
      "name": "If Target Url",
      "type": "n8n-nodes-base.if",
      "position": [
        460,
        1660
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "ff919945-b8c2-492a-b496-8617e9147389",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $('Webhook').item.json.body['Target Url'] }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "b920cc7f-a982-4732-835c-d28c8d3fa585",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "position": [
        2780,
        1940
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/url",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $('Information Extractor').item.json.output.Good_url_for_etract_information }}\"\n}\n",
        "options": {}
      },
      "id": "06bd9b49-366e-4f59-bf51-e531bb7469cb",
      "name": "Go on url1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2980,
        2000
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "loose"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "2a1bfc1e-28a6-45d1-9581-53b632af90e0",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $('Webhook').item.json.body.cookies }}",
              "rightValue": ""
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "36a1ab4f-f4b4-4b67-a3e2-e5d8908b6b67",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "position": [
        2420,
        1600
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/url",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $('Webhook').item.json.body['Target Url'] }}\"\n}\n",
        "options": {}
      },
      "id": "369b360c-5982-4781-b2b8-0d2d31f97576",
      "name": "Go on url2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3340,
        1020
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "ff919945-b8c2-492a-b496-8617e9147389",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $('Webhook').item.json.body['Target Url'] }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "a0ace3da-bf6b-43e5-96c1-5b055df79c96",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "position": [
        3140,
        1140
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://selenium_chrome:4444/wd/hub/session/{{ $('Create Selenium Session').item.json.value.sessionId }}/url",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{ $('Information Extractor').item.json.output.Good_url_for_etract_information }}\"\n}\n",
        "options": {}
      },
      "id": "b35c982f-d8e8-4a77-9249-68018061ba51",
      "name": "Go on url3",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        3340,
        1200
      ],
      "retryOnFail": true,
      "typeVersion": 4.2,
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-18T03:45:07.019Z",
  "versionId": "d3b33701-5775-41ac-b336-bb31c62dccff"
}