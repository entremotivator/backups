{
  "active": false,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Search Users by Email": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Classes": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Ignore",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Chat Memory Manager1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager1": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Add to Class": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Chat Memory Manager1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-19T19:25:06.395Z",
  "id": "XJfg1zmoC8jG2fmw",
  "meta": null,
  "name": "Customer Service Agents",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "bc710a1d-521d-4b37-ba45-1a7c29cb5d05",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -80,
        280
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Call this module to get membership info on the user when you have the user's email address",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appG4yqjQ2PuhFFVF",
          "mode": "list",
          "cachedResultName": "Billy's Boxing Gym",
          "cachedResultUrl": "https://airtable.com/appG4yqjQ2PuhFFVF"
        },
        "table": {
          "__rl": true,
          "value": "tbl9yjesU5jdspVWk",
          "mode": "list",
          "cachedResultName": "Members",
          "cachedResultUrl": "https://airtable.com/appG4yqjQ2PuhFFVF/tbl9yjesU5jdspVWk"
        },
        "filterByFormula": "={Email} = \"{{ $fromAI(\"email\", \"the email address of the user\") }}\"",
        "options": {}
      },
      "id": "26a7c4bc-33bb-4b30-92cf-15db40ad4576",
      "name": "Search Users by Email",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        340,
        420
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Call this module to find info on classes based on type of class",
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appG4yqjQ2PuhFFVF",
          "mode": "list",
          "cachedResultName": "Billy's Boxing Gym",
          "cachedResultUrl": "https://airtable.com/appG4yqjQ2PuhFFVF"
        },
        "table": {
          "__rl": true,
          "value": "tbl8Ygs2fI46afknb",
          "mode": "list",
          "cachedResultName": "Classes",
          "cachedResultUrl": "https://airtable.com/appG4yqjQ2PuhFFVF/tbl8Ygs2fI46afknb"
        },
        "filterByFormula": "={Class Name} = \"{{ $fromAI(\"class_name\", \"name of the class - options are: Beginners Class, Advanced Class, Ladies Only, Sparring, Boxercise\") }}\"",
        "options": {}
      },
      "id": "9f1110be-7bae-419f-945b-ec4df3c78858",
      "name": "Search Classes",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        480,
        420
      ]
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {
          "download": true
        }
      },
      "id": "1f3c4659-76db-4fe4-8da4-22b0fef18fcf",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -380,
        140
      ],
      "webhookId": "3f60237d-4bfc-4505-b737-b7376b0a28f9"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2798e0e7-48ca-49ef-a75b-924ddc279d24",
              "name": "=text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5331cf0b-6397-4f45-9dc6-5bff6797ded1",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f6212885-1f95-4687-b8b1-7cf5850d57a7",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "/start",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "40ccbd3d-8544-4d23-aaef-4fbc9fd5d2c2",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -220,
        140
      ]
    },
    {
      "parameters": {},
      "id": "766394cc-8e37-4eea-aee9-a2d07b3d423d",
      "name": "Ignore",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -160,
        440
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "ONLY call this tool when you have both the class recordID and the member's recordID. This will add the member to the class.",
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appG4yqjQ2PuhFFVF",
          "mode": "list",
          "cachedResultName": "Billy's Boxing Gym",
          "cachedResultUrl": "https://airtable.com/appG4yqjQ2PuhFFVF"
        },
        "table": {
          "__rl": true,
          "value": "tbl8Ygs2fI46afknb",
          "mode": "list",
          "cachedResultName": "Classes",
          "cachedResultUrl": "https://airtable.com/appG4yqjQ2PuhFFVF/tbl8Ygs2fI46afknb"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Members": "=[\"{{ $fromAI(\"user_record_id\", \"the recordID of the user to add\") }}\"]",
            "id": "={{ $fromAI(\"class_record_id\", \"the record ID of the class to update\") }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "ClassID",
              "displayName": "ClassID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Class Name",
              "displayName": "Class Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Sparring",
                  "value": "Sparring"
                },
                {
                  "name": "Ladies Only",
                  "value": "Ladies Only"
                },
                {
                  "name": "Boxercise",
                  "value": "Boxercise"
                },
                {
                  "name": "Beginners Class",
                  "value": "Beginners Class"
                },
                {
                  "name": "Advanced Class",
                  "value": "Advanced Class"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Date & Time",
              "displayName": "Date & Time",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Members",
              "displayName": "Members",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            }
          ]
        },
        "options": {
          "typecast": true
        }
      },
      "id": "ffc0c6f3-9a5b-4328-b8d0-18fdb68190a7",
      "name": "Add to Class",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        600,
        420
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "tableName": "n8n_chat_history"
      },
      "id": "8ea20646-6f01-4711-ad09-26f9d64fcc07",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        40,
        280
      ]
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"message\": \"Here are your details, Andy:\\n\\n- **Name**: Andy Brown\\n- **Email**: andy1@gmail.com\\n- **Membership**: Basic\\n- **Membership Number**: 00001\\n\\nIf you need help with anything else, feel free to ask!\",\n  \"memory\": {\n    \"content\": \"test\",\n    \"class_record_id\": \"\",\n    \"user_record_id\": \"rec6wL8SBMhkQHkQ0\",\n    \"last_class_name\": \"\",\n    \"last_email\": \"andy1@gmail.com\"\n  },\n  \"requires_tool\": {\n    \"name\": \"\",\n    \"params\": {}\n  }\n}"
      },
      "id": "30750c7a-261c-4748-ab7e-03adf3355492",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        860,
        600
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "message": "={{ $json.output.memory }}",
              "hideFromUI": true
            }
          ]
        }
      },
      "id": "c8d45070-5379-469a-bad5-11a4bfb712b5",
      "name": "Chat Memory Manager1",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        500,
        -40
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $('AI Agent').item.json.output.message }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "c0148f6b-2fde-4eaa-b64d-3f9df24b3c76",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        840,
        0
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "88ab00ea-a0af-4a37-bef4-b66f250959af",
      "name": "Auto-fixing Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        760,
        420
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "responseFormat": "json_object",
          "temperature": 0,
          "maxRetries": 3
        }
      },
      "id": "5a5b4fbc-df0e-4179-ab50-333360217c28",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        740,
        600
      ]
    },
    {
      "parameters": {
        "name": "billysboxinggym",
        "description": "Gets general info about Billy's Boxing Gym. Opening hours, costs, rules etc"
      },
      "id": "ded1120d-e98e-4b72-801c-185ca5a319e2",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        100,
        420
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "c5cc498d-4b7b-4e70-a0da-7aaeed1b6f19",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        220,
        580
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "aaed09e3-9b7e-4986-a12f-cdfdcca4e11b",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.1,
      "position": [
        120,
        720
      ]
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "billysboxinggym",
          "mode": "list",
          "cachedResultName": "billysboxinggym"
        },
        "options": {
          "pineconeNamespace": "billysboxing"
        }
      },
      "id": "719d448c-6ab0-4299-a06c-308b1981f04a",
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        -20,
        580
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields').item.json.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a customer support agent for Billy's Boxing Gym. Your job is to help the customer with their enquiries. You should maintain a friendly, helpful, polite tone.\n\nThe current date and time is {{ $now }}\n\nRESPONSE FORMAT: Always respond in JSON format with this EXACT structure:\n{\n  \"output\": {\n    \"message\": \"Your friendly response to the user\",\n    \"memory\": {\n      \"content\": \"Previous message as a string\",\n      \"class_record_id\": \"ID or empty string\",\n      \"user_record_id\": \"ID or empty string\",\n      \"last_class_name\": \"class name or empty string\",\n      \"last_email\": \"email or empty string\"\n    },\n    \"requires_tool\": {\n      \"name\": \"tool name or empty string\",\n      \"params\": {}\n    }\n  }\n}\n\nYou have access to memory - you should only use this as a last resort if you can't get the info from tools easily.\n\nYou have access to these tools:\n1. vector store - Contains FAQs on Billy's Boxing Gym. Use for general questions. Don't make up facts.\n2. search_users - Gets user details by email. Ask for email first.\n3. search_classes - Gets info on upcoming classes by name.\n4. add_to_class - ONLY use when you have BOTH user_record_id AND class_record_id.\n\nCRITICAL RULES:\n1. When user asks about classes:\n   - Use search_classes tool\n   - Store class_record_id for booking\n   - Set requires_tool.name = \"search_classes\"\n\n2. When user provides email:\n   - Use search_users tool\n   - Store user_record_id for booking\n   - Set requires_tool.name = \"search_users\"\n\n3. When adding to class:\n   - MUST have both recordIDs\n   - Use add_to_class tool\n   - Set requires_tool.name = \"add_to_class\"\n\n4. ALWAYS maintain the JSON structure\n5. Store previous message in memory.content\n6. Keep recordIDs when received\n7. Store email when provided\n8. Keep class name when mentioned\n\nRemember:\n- Keep responses friendly and natural\n- Store all necessary IDs\n- Maintain proper JSON format\n- Process tools when needed\n- Keep memory updated"
        }
      },
      "id": "f0d8e587-e8e0-40da-bfc8-fcea7952891e",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        180,
        0
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-19T19:25:48.057Z",
  "versionId": "9011d5bb-5fe4-4047-846d-8bb0ac65795d"
}